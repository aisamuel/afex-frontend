{"version":3,"sources":["./src/app/fees/add-fees/add-fees.component.ts","./src/app/fees/add-fees/add-fees.component.html","./src/app/fees/all-fees/all-fees.component.ts","./src/app/fees/all-fees/all-fees.component.html","./src/app/fees/all-fees/dialogs/delete/delete.component.ts","./src/app/fees/all-fees/dialogs/delete/delete.component.html","./src/app/fees/all-fees/dialogs/form-dialog/form-dialog.component.ts","./src/app/fees/all-fees/dialogs/form-dialog/form-dialog.component.html","./src/app/fees/all-fees/fees.model.ts","./src/app/fees/edit-fees/edit-fees.component.ts","./src/app/fees/edit-fees/edit-fees.component.html","./src/app/fees/fee-receipt/fee-receipt.component.ts","./src/app/fees/fee-receipt/fee-receipt.component.html","./src/app/fees/fees-category/dialogs/category-delete/category-delete.component.ts","./src/app/fees/fees-category/dialogs/category-delete/category-delete.component.html","./src/app/fees/fees-category/dialogs/form-dialog-category/form-dialog-category.component.ts","./src/app/fees/fees-category/dialogs/form-dialog-category/form-dialog-category.component.html","./src/app/fees/fees-category/fees-category.component.ts","./src/app/fees/fees-category/fees-category.component.html","./src/app/fees/fees-category/fees.model.ts","./src/app/fees/fees-category/fees.service.ts","./src/app/fees/fees-discount/dialogs/discount-delete/discount-delete.component.ts","./src/app/fees/fees-discount/dialogs/discount-delete/discount-delete.component.html","./src/app/fees/fees-discount/dialogs/form-dialog-discount/form-dialog-discount.component.ts","./src/app/fees/fees-discount/dialogs/form-dialog-discount/form-dialog-discount.component.html","./src/app/fees/fees-discount/fees-discount.component.ts","./src/app/fees/fees-discount/fees-discount.component.html","./src/app/fees/fees-discount/fees.service.ts","./src/app/fees/fees-discount/fees.ts","./src/app/fees/fees-report/fees-report.component.ts","./src/app/fees/fees-report/fees-report.component.html","./src/app/fees/fees-routing.module.ts","./src/app/fees/fees.module.ts","./src/app/fees/payment-method/payment-method.component.ts","./src/app/fees/payment-method/payment-method.component.html","./src/app/fees/setup/dialogs/form-dialog-add/form-dialog-add.component.ts","./src/app/fees/setup/dialogs/form-dialog-add/form-dialog-add.component.html","./src/app/fees/setup/dialogs/form-dialog-delete/form-dialog-delete.component.ts","./src/app/fees/setup/dialogs/form-dialog-delete/form-dialog-delete.component.html","./src/app/fees/setup/dialogs/form-dialog-edit/form-dialog-edit.component.ts","./src/app/fees/setup/dialogs/form-dialog-edit/form-dialog-edit.component.html","./src/app/fees/setup/fees.service.ts","./src/app/fees/setup/fees.ts","./src/app/fees/setup/setup.component.ts","./src/app/fees/setup/setup.component.html"],"names":[],"mappings":"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","file":"fees-fees-module.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-fees',\r\n  templateUrl: './add-fees.component.html',\r\n  styleUrls: ['./add-fees.component.sass']\r\n})\r\nexport class AddFeesComponent {\r\n  feesForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.feesForm = this.fb.group({\r\n      rollNo: ['', [Validators.required]],\r\n      sName: ['', [Validators.required]],\r\n      fType: ['', [Validators.required]],\r\n      department: ['', [Validators.required]],\r\n      date: ['', [Validators.required]],\r\n      invoiceNo: ['', [Validators.required]],\r\n      pType: ['', [Validators.required]],\r\n      status: ['', [Validators.required]],\r\n      amount: ['', [Validators.required]],\r\n      duration: ['', [Validators.required]],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.feesForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Fees</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Fees Details</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Fees Details</h2>\r\n                        <ul class=\"header-dropdown m-r--5\">\r\n                            <li class=\"dropdown\">\r\n                                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\"\r\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <i class=\"material-icons\">more_vert</i>\r\n                                </a>\r\n                                <ul class=\"dropdown-menu pull-right\">\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Action</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Another action</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Something else here</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Roll No</mat-label>\r\n                                        <input matInput formControlName=\"rollNo\" required>\r\n                                        <mat-icon matSuffix>label</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\r\n                                            Please enter roll no\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Student Name</mat-label>\r\n                                        <input matInput formControlName=\"sName\" required>\r\n                                        <mat-icon matSuffix>account_circle</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\r\n                                            Please enter student name\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Select Department</mat-label>\r\n                                        <mat-select formControlName=\"department\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('department').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                                        <mat-label>Fees Type</mat-label>\r\n                                        <mat-select formControlName=\"fType\" required>\r\n                                            <mat-option [value]=\"'annual'\">\r\n                                                Annual\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'tution'\">\r\n                                                Tution\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'transport'\">\r\n                                                Transport\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'exam'\">\r\n                                                Exam\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'library'\">\r\n                                                Library\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                                            Select Fees Type\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <div class=\"m-b-20\">\r\n                                        <mat-label class=\"mr-3\">Duration:</mat-label>\r\n                                        <mat-radio-group aria-label=\"Select duration\" formControlName=\"duration\"\r\n                                            required>\r\n                                            <mat-radio-button value=\"monthly\">Monthly</mat-radio-button>\r\n                                            <mat-radio-button value=\"yearly\">Yearly</mat-radio-button>\r\n                                            <mat-radio-button value=\"session\">Session</mat-radio-button>\r\n                                            <mat-error *ngIf=\"feesForm.get('duration').hasError('required')\">\r\n                                                Select Duration\r\n                                            </mat-error>\r\n                                        </mat-radio-group>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Collection Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Payment Type</mat-label>\r\n                                        <mat-select formControlName=\"pType\" required>\r\n                                            <mat-option [value]=\"'cash'\">\r\n                                                Cash\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'cheque'\">\r\n                                                Cheque\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'online transfer'\">\r\n                                                Online Transfer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'credit card'\">\r\n                                                Draft\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\r\n                                            Select Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Invoice Number</mat-label>\r\n                                        <input matInput formControlName=\"invoiceNo\" required>\r\n                                        <mat-icon matSuffix>receipt</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\r\n                                            Enter Invoice Number\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Status</mat-label>\r\n                                        <mat-select formControlName=\"status\" required>\r\n                                            <mat-option [value]=\"'paid'\">\r\n                                                Paid\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'unpaid'\">\r\n                                                Unpaid\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'pending'\">\r\n                                                Pending\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                                            Select Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Amount</mat-label>\r\n                                        <input matInput formControlName=\"amount\" required>\r\n                                        <mat-icon matSuffix>monetization_on</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\r\n                                            Enter amount\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <div class=\"example-button-row\">\r\n                                        <button class=\"mr-3\" [disabled]=\"!feesForm.valid \" mat-raised-button\r\n                                            color=\"primary\">Submit</button>\r\n                                        <button mat-raised-button color=\"warn\" tabindex=\"-1\">Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FeesService } from './fees.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { FeeReport } from './fees.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-fees',\r\n  templateUrl: './all-fees.component.html',\r\n  styleUrls: ['./all-fees.component.sass']\r\n})\r\nexport class AllFeesComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'student_name',\r\n    'classes',\r\n    'total_fees_assigned',\r\n    'total_amount_paid',\r\n    'balance_to_pay',\r\n    'payment_due_date',\r\n    'last_payment_date',\r\n    'status',\r\n    'actions'\r\n  ];\r\n  exampleDatabase: FeesService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<FeeReport>(true, []);\r\n  id: number;\r\n  fees: FeeReport | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public feesService: FeesService,\r\n    private snackBar: MatSnackBar\r\n  ) { }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        fees: this.fees,\r\n        action: 'add'\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.feesService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        fees: row,\r\n        action: 'edit'\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          x => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[\r\n          foundIndex\r\n        ] = this.feesService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          x => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n        this.selection.select(row)\r\n      );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<FeeReport>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new FeesService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup')\r\n      // .debounceTime(150)\r\n      // .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: FeeReport) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<FeeReport> {\r\n  _filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  filteredData: FeeReport[] = [];\r\n  renderedData: FeeReport[] = [];\r\n  constructor(\r\n    public _exampleDatabase: FeesService,\r\n    public _paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<FeeReport[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this._exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this._filterChange,\r\n      this._paginator.page\r\n    ];\r\n    this._exampleDatabase.getAllFeess();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this._exampleDatabase.data\r\n          .slice()\r\n          .filter((fees: FeeReport) => {\r\n            const searchStr = (\r\n              fees.last_payment_date +\r\n              fees.payment_due_date +\r\n              fees.total_amount_paid +\r\n              fees.status\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this._paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() { }\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: FeeReport[]): FeeReport[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'student_id':\r\n          [propertyA, propertyB] = [a.student_id.last_name, b.student_id.last_name];\r\n          break;\r\n        case 'classes':\r\n          [propertyA, propertyB] = [a.classes.name, b.classes.name];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        // case 'balance_to_pay':\r\n        //   [propertyA, propertyB] = [a.balance_to_pay, b.balance_to_pay];\r\n        //   break;\r\n        case 'total_amount_paid':\r\n          [propertyA, propertyB] = [a.total_amount_paid, b.total_amount_paid];\r\n          break;\r\n        case 'last_payment_date':\r\n          [propertyA, propertyB] = [a.last_payment_date, b.last_payment_date];\r\n          break;\r\n        case 'status':\r\n          [propertyA, propertyB] = [a.status, b.status];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Fees Report</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Report</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">All</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"body\">\r\n                        <div class=\"responsive_table\">\r\n                            <div class=\"materialTableHeader\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-8\">\r\n                                        <ul class=\"header-buttons-left ml-0\">\r\n                                            <li class=\"dropdown\">\r\n                                                <h2>\r\n                                                    <strong>Fees Report</strong></h2>\r\n                                            </li>\r\n                                            <li class=\"dropdown m-l-20\">\r\n                                                <label for=\"search-input\"><i\r\n                                                        class=\"material-icons search-icon\">search</i></label>\r\n                                                <input placeholder=\"Search\" type=\"text\" #filter\r\n                                                    class=\"browser-default search-field\" aria-label=\"Search box\">\r\n                                            </li>\r\n                                            <li>\r\n                                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                                                        <mat-icon class=\"col-white\">delete\r\n                                                        </mat-icon>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <ul class=\"header-buttons\">\r\n                                            <!-- <li>\r\n                                                <div class=\"icon-button-demo\">\r\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </li> -->\r\n                                            <li>\r\n                                                <div class=\"icon-button-demo\">\r\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                                <!-- Checkbox Column -->\r\n                                <ng-container matColumnDef=\"select\">\r\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                            [ngClass]=\"'tbl-checkbox'\">\r\n                                        </mat-checkbox>\r\n                                    </mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                            (change)=\"$event ? selection.toggle(row) : null\"\r\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                                        </mat-checkbox>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <!-- ID Column -->\r\n                                <!-- <ng-container matColumnDef=\"id\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                                </ng-container> -->\r\n                                <ng-container matColumnDef=\"student_id\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Student Name</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.student_name.last_name + ' ' + row.student_name.first_name}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"classes\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Class</mat-header-cell>\r\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                            \r\n                                                {{row.classes.name}}\r\n                                            \r\n                                        </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"classes\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Fee Assigned</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.classes.name }}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"total_amount_paid\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Amount Paid</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.total_amount_paid }}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"classes\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Balance to pay</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.classes }}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"payment_due_date\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Due Date</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.payment_due_date | date: 'MM/dd/yyyy' }}\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"last_payment_date\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Last Payment Date</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.last_payment_date | date: 'MM/dd/yyyy' }}\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                \r\n                                <ng-container matColumnDef=\"status\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.status}}</mat-cell>\r\n                                </ng-container>\r\n                                <!-- actions -->\r\n                                <ng-container matColumnDef=\"actions\">\r\n                                    <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\"\r\n                                            (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\">\r\n                                            <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\"\r\n                                            (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\">\r\n                                            <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                                        </button>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                                    [style.cursor]=\"'pointer'\" matRipple>\r\n                                </mat-row>\r\n                            </mat-table>\r\n                            <!-- context menu start -->\r\n                            <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n                            </div>\r\n                            <mat-menu #contextMenu=\"matMenu\">\r\n                                <ng-template matMenuContent let-item=\"item\">\r\n                                    <button mat-menu-item (click)=\"addNew()\">\r\n                                        <mat-icon>add_box</mat-icon>\r\n                                        <span>Add Record</span>\r\n                                    </button>\r\n                                    <button mat-menu-item (click)=\"editCall(item)\">\r\n                                        <mat-icon>create</mat-icon>\r\n                                        <span>Edit Record</span>\r\n                                    </button>\r\n                                    <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                                        <mat-icon>delete</mat-icon>\r\n                                        <span>Delete Record</span>\r\n                                    </button>\r\n                                    <button mat-menu-item (click)=\"refresh()\">\r\n                                        <mat-icon>refresh</mat-icon>\r\n                                        <span>Refresh Record</span>\r\n                                    </button>\r\n                                    <button mat-menu-item disabled>\r\n                                        <mat-icon>no_encryption</mat-icon>\r\n                                        <span>Disable</span>\r\n                                    </button>\r\n                                    <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                                        <mat-icon>list_alt</mat-icon>\r\n                                        <span> Nested Menu</span>\r\n                                    </button>\r\n                                </ng-template>\r\n                            </mat-menu>\r\n                            <mat-menu #nestedmenu=\"matMenu\">\r\n                                <button mat-menu-item>\r\n                                    <mat-icon>mail_outline</mat-icon>\r\n                                    <span>Item 1</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                    <mat-icon>call</mat-icon>\r\n                                    <span>Item 2</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                    <mat-icon>chat</mat-icon>\r\n                                    <span>Item 3</span>\r\n                                </button>\r\n                            </mat-menu>\r\n                            <!-- context menu end -->\r\n                            <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                                No results\r\n                            </div>\r\n                            <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\r\n                                [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FeesService } from '../../fees.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public feesService: FeesService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.feesService.deleteFees(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Student Name: </span>{{ data.student_name.last_name + ' ' + data.student_name.middle_name + ' ' + data.student_name.first_name }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Class: </span>{{data.classes.name}}\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Status: </span>{{data.status}}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FeesService, Classes } from '../../fees.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { FeeReport, Student } from '../../fees.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  feesForm: FormGroup;\r\n  fees: FeeReport;\r\n  classes: Classes[];\r\n  students: Student[];\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public feesService: FeesService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.getClasses();\r\n    this.getStudents();\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      console.log(data.fees.date);\r\n      this.dialogTitle = data.fees.sName;\r\n      this.fees = data.fees;\r\n    } else {\r\n      this.dialogTitle = 'New Fees';\r\n      this.fees = new FeeReport({});\r\n    }\r\n    this.feesForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.fees.id],\r\n      student_id: [this.fees.student_id, [Validators.required]],\r\n      classes: [this.fees.classes, [Validators.required]],\r\n      // balance_to_pay: [this.fees.balance_to_pay, [Validators.required]],\r\n      last_payment_date: [\r\n        formatDate(this.fees.last_payment_date, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      payment_due_date: [\r\n        formatDate(this.fees.payment_due_date, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      total_amount_paid: [this.fees.total_amount_paid, [Validators.required]],\r\n      // total_fees_assigned: [this.fees.total_fees_assigned, [Validators.required]],\r\n      status: [this.fees.status, [Validators.required]],\r\n      // amount: [this.fees., [Validators.required]]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.feesService.addFees(this.feesForm.getRawValue());\r\n    if(this.action === 'edit') {\r\n      console.log(\"it's editing\");\r\n      this.feesService.updateFees(this.feesForm.getRawValue());\r\n      this.feesService.editFeeReport(\r\n        // this.feesForm.value,\r\n        this.feesForm.value.id,\r\n        this.feesForm.value.student_name,\r\n        this.feesForm.value.classes,\r\n        this.feesForm.value.total_fees_assigned,\r\n        this.feesForm.value.total_amount_paid,\r\n        this.feesForm.value.balance_to_pay,\r\n        this.feesForm.value.payment_due_date,\r\n        this.feesForm.value.last_payment_date,\r\n        this.feesForm.value.status\r\n        \r\n\r\n      ).subscribe((res) => {\r\n        \r\n        console.log(res);\r\n      \r\n        console.log(\"successfully logged in\");\r\n        \r\n        \r\n      }, (error) => {\r\n        console.error(error);\r\n        // this.error = error.error;\r\n      });\r\n\r\n    } else {\r\n      console.log(\"it's adding\");\r\n      this.feesService.updateFees(this.feesForm.getRawValue());\r\n      this.feesService.createFeeReport(\r\n        // this.feesForm.value,\r\n        this.feesForm.value.student_name,\r\n        this.feesForm.value.classes,\r\n        this.feesForm.value.total_fees_assigned,\r\n        this.feesForm.value.total_amount_paid,\r\n        this.feesForm.value.balance_to_pay,\r\n        this.feesForm.value.payment_due_date,\r\n        this.feesForm.value.last_payment_date,\r\n        this.feesForm.value.status\r\n        \r\n\r\n      ).subscribe((res) => {\r\n        \r\n        console.log(res);\r\n      \r\n        console.log(\"successfully logged in\");\r\n        \r\n        \r\n      }, (error) => {\r\n        console.error(error);\r\n        // this.error = error.error;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  getClasses() {\r\n    \r\n    this.feesService.getClasses()\r\n     .subscribe(\r\n       (response) => {\r\n         this.classes = response;\r\n         console.log(response);\r\n         console.log(\"get classes working\");\r\n        //  this.getParentProfile();\r\n\r\n       }, (error) => {\r\n         console.error(error);\r\n         console.log(\"get classes not working\")\r\n\r\n       }\r\n     );\r\n\r\n  }\r\n\r\n  getStudents() {\r\n    \r\n    this.feesService.getStudents()\r\n     .subscribe(\r\n       (response) => {\r\n         this.students = response;\r\n         console.log(response);\r\n         console.log(\"get students working\");\r\n        //  this.getParentProfile();\r\n\r\n       }, (error) => {\r\n         console.error(error);\r\n         console.log(\"get students not working\")\r\n\r\n       }\r\n     );\r\n\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n            <div class=\"modalHeader clearfix\">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-5 font-17\">\r\n                        {{dialogTitle}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"submit\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                        <mat-label>Student Name</mat-label>\r\n                        <mat-select formControlName=\"student_name\" required>\r\n                            <!-- <div *ngFor=\"let student of students\"> -->\r\n                                <mat-option *ngFor=\"let student of students\" [value]=\"student.id\">\r\n                                    {{ student.first_name + ' ' + student.middle_name + ' ' + student.last_name }}\r\n                                </mat-option>\r\n                            <!-- </div> -->\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('student_name').hasError('required')\">\r\n                            Select student name\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                        <mat-label>Class</mat-label>\r\n                        <mat-select formControlName=\"classes\" required>\r\n                            <!-- <div *ngFor=\"let class of classes\"> -->\r\n                                <mat-option *ngFor=\"let class of classes\" [value]=\"class.id\">\r\n                                    {{class.name}}\r\n                                </mat-option>\r\n                            <!-- </div> -->\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('classes').hasError('required')\">\r\n                            Select class\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <!-- <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Student Name</mat-label>\r\n                        <input matInput formControlName=\"student_name\" required>\r\n                        <mat-icon matSuffix>account_circle</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('student_name').hasError('required')\">\r\n                            Please enter student name\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div> -->\r\n                <!-- <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Class</mat-label>\r\n                        <input matInput formControlName=\"classes\" required>\r\n                        <mat-icon matSuffix>account_circle</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('classes').hasError('required')\">\r\n                            Please enter student name\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div> -->\r\n            </div>\r\n            <div class=\"row\">\r\n                <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                        <mat-label>Fees Type</mat-label>\r\n                        <mat-select formControlName=\"fType\" required>\r\n                            <mat-option [value]=\"'annual'\">\r\n                                Annual\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'tution'\">\r\n                                Tution\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'transport'\">\r\n                                Transport\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'exam'\">\r\n                                Exam\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'library'\">\r\n                                Library\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'other'\">\r\n                                Other\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                            Select Fees Type\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div> -->\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label> Last Payment Date</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"last_payment_date\" required>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                        <mat-error *ngIf=\"feesForm.get('last_payment_date').hasError('required')\">\r\n                            Please select date\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Balance to pay</mat-label>\r\n                        <input matInput formControlName=\"balance_to_pay\" required>\r\n                        <mat-icon matSuffix>receipt</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('balance_to_pay').hasError('required')\">\r\n                            Enter Invoice Number\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Total amount paid</mat-label>\r\n                        <input matInput formControlName=\"total_amount_paid\" required>\r\n                        <mat-icon matSuffix>receipt</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('total_amount_paid').hasError('required')\">\r\n                            Enter total amount paid\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Status</mat-label>\r\n                        <mat-select formControlName=\"status\" required>\r\n                            <mat-option [value]=\"'paid'\">\r\n                                Paid\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'unpaid'\">\r\n                                Unpaid\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'pending'\">\r\n                                Pending\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                            Select Status\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Total Fee Assigned</mat-label>\r\n                        <input matInput formControlName=\"total_fees_assigned\" required>\r\n                        <mat-icon matSuffix>monetization_on</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('total_fees_assigned').hasError('required')\">\r\n                            Enter total fee assigned\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <div class=\"example-button-row\">\r\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!feesForm.valid\"\r\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { formatDate } from '@angular/common';\r\nexport class Classes{\r\n  constructor(\r\n      public id?: any,\r\n      public name?: string,\r\n      public available?: any\r\n    ) {}\r\n}\r\n\r\nexport class FeeCategory {\r\n  constructor(\r\n    public id?: any,\r\n    public category_title?: string,\r\n    // public class_assign_to?: any,\r\n    // public student_assign_to?: any,\r\n    public fee_name?: string,\r\n    public fees_amount?: any,\r\n    public installment_allowed?: any,\r\n    \r\n  ) {\r\n\r\n  }\r\n  \r\n}\r\n// \"id\": \"701daa60-1222-4a77-aea9-73ab92bc2323\",\r\n//         \"fee_category\": null,\r\n//         \"student_id\": \"00f83870-4733-4ea4-9330-4d3d39fa3e05\",\r\n//         \"classes\": null,\r\n//         \"discount_amount\": \"\",\r\n//         \"payment_due_date\": null,\r\n//         \"last_payment_date\": null,\r\n//         \"status\": \"\"\r\n// fields = ('id', 'fee_category', 'student_id', 'classes', \r\n// 'discount_amount', 'payment_due_date', 'last_payment_date', 'status')\r\nexport class FeeReport {\r\n  id: number;\r\n  student_id: Student;\r\n  classes: Classes;\r\n  fee_category: FeeCategory;\r\n  discount_amount: any;\r\n  total_amount_paid: any;\r\n  payment_due_date: any;\r\n  last_payment_date: any;\r\n  status: string;\r\n  constructor(fees) {\r\n    {\r\n      this.id = fees.id || this.getRandomID();\r\n      this.student_id = fees.student_id || Student;\r\n      this.classes = fees.classes || Classes;\r\n      this.discount_amount = fees.discount_amount || '';\r\n      this.total_amount_paid = fees.total_amount_paid || '';\r\n      this.payment_due_date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.last_payment_date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.status = fees.status || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n\r\n\r\nexport class Student {\r\n  constructor(\r\n      public id?: any,\r\n      public first_name?: string,\r\n      public middle_name?: string,\r\n      public last_name?: string,\r\n      public class_applied_for?: string,\r\n      public exam_score?: any,\r\n      public admit_applicant?: any\r\n  ) {\r\n\r\n  }\r\n}\r\n\r\n\r\n//   public getRandomID(): string {\r\n//     const S4 = () => {\r\n//       return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n//     };\r\n//     return S4() + S4();\r\n//   }\r\n\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-fees',\r\n  templateUrl: './edit-fees.component.html',\r\n  styleUrls: ['./edit-fees.component.sass']\r\n})\r\nexport class EditFeesComponent {\r\n  feesForm: FormGroup;\r\n  formdata = {\r\n    rollNo: '99',\r\n    sName: 'Jenish Shah\t',\r\n    fType: 'annual',\r\n    department: 'mathematics',\r\n    date: '2020-01-04T14:22:18Z',\r\n    invoiceNo: 'IN-434454',\r\n    pType: 'cheque',\r\n    status: 'paid',\r\n    amount: '320$',\r\n    duration: 'yearly',\r\n    details: 'Annual Tution Fees'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.feesForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.feesForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      rollNo: [this.formdata.rollNo, [Validators.required]],\r\n      sName: [this.formdata.sName, [Validators.required]],\r\n      fType: [this.formdata.fType, [Validators.required]],\r\n      department: [this.formdata.department, [Validators.required]],\r\n      date: [this.formdata.date, [Validators.required]],\r\n      invoiceNo: [this.formdata.invoiceNo, [Validators.required]],\r\n      pType: [this.formdata.pType, [Validators.required]],\r\n      status: [this.formdata.status, [Validators.required]],\r\n      amount: [this.formdata.amount, [Validators.required]],\r\n      duration: [this.formdata.duration, [Validators.required]],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Fees</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Edit Fees Details</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Edit Fees Details</h2>\r\n                        <ul class=\"header-dropdown m-r--5\">\r\n                            <li class=\"dropdown\">\r\n                                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\"\r\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <i class=\"material-icons\">more_vert</i>\r\n                                </a>\r\n                                <ul class=\"dropdown-menu pull-right\">\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Action</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Another action</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Something else here</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Roll No</mat-label>\r\n                                        <input matInput formControlName=\"rollNo\" required>\r\n                                        <mat-icon matSuffix>label</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\r\n                                            Please enter roll no\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Student Name</mat-label>\r\n                                        <input matInput formControlName=\"sName\" required>\r\n                                        <mat-icon matSuffix>account_circle</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\r\n                                            Please enter student name\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Select Department</mat-label>\r\n                                        <mat-select formControlName=\"department\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('department').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                                        <mat-label>Fees Type</mat-label>\r\n                                        <mat-select formControlName=\"fType\" required>\r\n                                            <mat-option [value]=\"'annual'\">\r\n                                                Annual\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'tution'\">\r\n                                                Tution\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'transport'\">\r\n                                                Transport\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'exam'\">\r\n                                                Exam\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'library'\">\r\n                                                Library\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                                            Select Fees Type\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <div class=\"m-b-20\">\r\n                                        <mat-label class=\"mr-3\">Duration:</mat-label>\r\n                                        <mat-radio-group aria-label=\"Select duration\" formControlName=\"duration\"\r\n                                            required>\r\n                                            <mat-radio-button value=\"monthly\">Monthly</mat-radio-button>\r\n                                            <mat-radio-button value=\"yearly\">Yearly</mat-radio-button>\r\n                                            <mat-radio-button value=\"session\">Session</mat-radio-button>\r\n                                            <mat-error *ngIf=\"feesForm.get('duration').hasError('required')\">\r\n                                                Select Duration\r\n                                            </mat-error>\r\n                                        </mat-radio-group>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Collection Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Payment Type</mat-label>\r\n                                        <mat-select formControlName=\"pType\" required>\r\n                                            <mat-option [value]=\"'cash'\">\r\n                                                Cash\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'cheque'\">\r\n                                                Cheque\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'online transfer'\">\r\n                                                Online Transfer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'credit card'\">\r\n                                                Draft\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\r\n                                            Select Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Invoice Number</mat-label>\r\n                                        <input matInput formControlName=\"invoiceNo\" required>\r\n                                        <mat-icon matSuffix>receipt</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\r\n                                            Enter Invoice Number\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Status</mat-label>\r\n                                        <mat-select formControlName=\"status\" required>\r\n                                            <mat-option [value]=\"'paid'\">\r\n                                                Paid\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'unpaid'\">\r\n                                                Unpaid\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'pending'\">\r\n                                                Pending\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                                            Select Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Amount</mat-label>\r\n                                        <input matInput formControlName=\"amount\" required>\r\n                                        <mat-icon matSuffix>monetization_on</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\r\n                                            Enter amount\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <div class=\"example-button-row\">\r\n                                        <button class=\"mr-3\" [disabled]=\"!feesForm.valid \" mat-raised-button\r\n                                            color=\"primary\">Submit</button>\r\n                                        <button mat-raised-button color=\"warn\" tabindex=\"-1\">Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fee-receipt',\r\n  templateUrl: './fee-receipt.component.html',\r\n  styleUrls: ['./fee-receipt.component.sass']\r\n})\r\nexport class FeeReceiptComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Receipt</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Receipt</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"white-box\">\r\n                                    <h3>\r\n                                        <b>RECEIPT</b>\r\n                                        <span class=\"pull-right\">#345766</span>\r\n                                    </h3>\r\n                                    <hr>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"pull-left\">\r\n                                                <address>\r\n                                                    <p class=\"font-bold\">BILL FROM :</p>\r\n                                                    <img src=\"assets/images/invoice_logo.png\" alt=\"logo\"\r\n                                                        class=\"logo-default\" />\r\n                                                    <p class=\"text-muted m-l-5\">\r\n                                                        Aditya University, <br> Opp. Town Hall, <br>\r\n                                                        Sardar Patel Road, <br> Ahmedabad - 380015\r\n                                                    </p>\r\n                                                </address>\r\n                                            </div>\r\n                                            <div class=\"pull-right text-right\">\r\n                                                <address>\r\n                                                    <p class=\"addr-font-h3 font-bold\">BILL TO :</p>\r\n                                                    <p class=\"font-bold addr-font-h4\">Jayesh Patel</p>\r\n                                                    <p class=\"text-muted m-l-30\">\r\n                                                        207, Prem Sagar Appt.,\r\n                                                        <br> Near Income Tax Office,\r\n                                                        <br> Ashram Road,\r\n                                                        <br> Ahmedabad - 380057\r\n                                                    </p>\r\n                                                    <p class=\"m-t-30\">\r\n                                                        <b>Invoice Date :</b>\r\n                                                        <i class=\"ml-2 fa fa-calendar\"></i> 14th July 2019\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <b>Status :</b>\r\n                                                        <span class=\"label col-green font-weight-bold\">paid</span>\r\n                                                    </p>\r\n                                                </address>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"table-responsive m-t-40\">\r\n                                                <table class=\"table table-hover\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th class=\"text-center\">#</th>\r\n                                                            <th class=\"text-right\">Fees Type</th>\r\n                                                            <th class=\"text-right\">Frequency</th>\r\n                                                            <th class=\"text-right\">Date</th>\r\n                                                            <th class=\"text-right\">Invoice number</th>\r\n                                                            <th class=\"text-right\">Amount</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td class=\"text-center\">1</td>\r\n                                                            <td class=\"text-right\">Annual Fees</td>\r\n                                                            <td class=\"text-right\">Yearly</td>\r\n                                                            <td class=\"text-right\">2016-11-19</td>\r\n                                                            <td class=\"text-right\">#IN-345609865</td>\r\n                                                            <td class=\"text-right\">$100</td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td class=\"text-center\">2</td>\r\n                                                            <td class=\"text-right\">Tuition Fees</td>\r\n                                                            <td class=\"text-right\">Monthly</td>\r\n                                                            <td class=\"text-right\">2016-11-19</td>\r\n                                                            <td class=\"text-right\">#IN-345604565</td>\r\n                                                            <td class=\"text-right\">$50</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"pull-right m-t-30 text-right\">\r\n                                                <p>Sub - Total amount: $150</p>\r\n                                                <p>Discount : $10 </p>\r\n                                                <p>Tax (10%) : $14 </p>\r\n                                                <hr>\r\n                                                <h3><b>Total :</b> $164</h3>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <hr>\r\n                                            <div class=\"text-right\">\r\n                                                <button mat-raised-button color=\"primary\"> Proceed to payment\r\n                                                </button>\r\n                                                <button onclick=\"javascript:window.print();\"\r\n                                                    class=\"btn btn-default btn-outline\" type=\"button\"> <span><i\r\n                                                            class=\"fa fa-print\"></i> Print</span> </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FeesService } from '../../fees.service';\n@Component({\n  selector: 'app-category-delete',\n  templateUrl: './category-delete.component.html',\n  styleUrls: ['./category-delete.component.sass']\n})\nexport class CategoryDeleteComponent{\n  constructor(\n    public dialogRef: MatDialogRef<CategoryDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.feesService.deleteFeeCategory(this.data.id);\n  }\n}","<div class=\"container\">\n    <h3 mat-dialog-title>Are you sure?</h3>\n    <div mat-dialog-content>\n        <ul class=\"clearfix\">\n            <p>Note that all classes and Student fee under this fee Category will be lost</p>\n            <li>\n                <p>\n                    <span class=\"font-weight-bold\">Category Title: </span>{{data.category_title}}\n                </p>\n            </li>\n            <!-- <li>\n                <p><span class=\"font-weight-bold\"> Student Name: </span>{{ data.student_assign_to.last_name + ' ' + data.student_assign_to.middle_name + ' ' + data.student_assign_to.first_name }}</p>\n            </li>\n            <li>\n                <p>\n                    <span class=\"font-weight-bold\">Class: </span>{{data.class_assign_to.name}}\n                </p>\n            </li> -->\n        </ul>\n    </div>\n    <div mat-dialog-actions class=\"mb-1\">\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n            Delete\n        </button>\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject,OnInit } from '@angular/core';\nimport { FeesService, Classes, Student} from '../../fees.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder\n} from '@angular/forms';\nimport { FeeCategory } from '../../fees.model';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-form-dialog-category',\n  templateUrl: './form-dialog-category.component.html',\n  styleUrls: ['./form-dialog-category.component.sass']\n})\nexport class FormDialogCategoryComponent implements OnInit {\n\n  action: string;\n  dialogTitle: string;\n  feesForm: FormGroup;\n  fees: FeeCategory;\n  classes: Classes[];\n  students: Student[];\n  displayAll = false;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.getClasses();\n    this.getStudents();\n    this.action = data.action;\n    if (this.action === 'edit') {\n      console.log(data.fees);\n      this.dialogTitle = 'Edit Category';\n      this.fees = data.fees;\n      this.displayAll=true;\n    } else {\n      this.dialogTitle = 'New Category';\n      this.fees = new FeeCategory();\n    }\n    this.feesForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.fees.id],\n      category_title: [this.fees.category_title, [Validators.required]],\n      // class_assign_to: [this.fees.class_assign_to, ],\n      // student_assign_to: [this.fees.student_assign_to, ],\n      // amount: [this.fees., [Validators.required]]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.feesService.addFees(this.feesForm.getRawValue());\n    if(this.action === 'edit') {\n      console.log(\"it's editing\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.editFeeCategory(\n        // this.feesForm.value,\n        this.fees.id,\n        this.fees.category_title,\n\n      ).subscribe((res) => {\n        \n        console.log(res);\n        this.getClasses();\n        this.getStudents();\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n\n    } else {\n      console.log(\"it's adding\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.createFeeCategory(\n        // this.feesForm.value,\n        this.fees.category_title,\n        // this.feesForm.value.category_title,\n        \n\n      ).subscribe((res) => {\n        \n        console.log(res);\n        this.getClasses();\n        this.getStudents();\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n\n    }\n  }\n\n  getClasses() {\n    \n    this.feesService.getClasses()\n     .subscribe(\n       (response) => {\n         this.classes = response;\n         console.log(response);\n         \n         console.log(\"get classes working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get classes not working\")\n\n       }\n     );\n\n  }\n\n  editClass(id, fees): void {\n    // this.aclass.available = !this.aclass.available;\n    \n    this.feesService.editClass(\n      id,\n      fees\n    ).subscribe((res) => {\n      // console.log(this.login.role);\n      console.log(res);\n      this.getClasses();\n      this.getStudents();\n      // console.log(res.data.id);\n      console.log(\"edit class working\");\n      this.getClasses();\n      // this.success = \"Your super admin account has been successfully created\"\n      \n    }, (error) => {\n      console.error(error);\n      console.log(\"edit class not working\");\n      \n    });\n\n  }\n\n  editStudent(id, student_id, fees): void {\n    // this.aclass.available = !this.aclass.available;\n    \n    this.feesService.editStudent(\n      id,\n      student_id,\n      fees\n    ).subscribe((res) => {\n      // console.log(this.login.role);\n      console.log(res);\n      this.getClasses();\n      this.getStudents();\n      // console.log(res.data.id);\n      console.log(\"edit class working\");\n      this.getClasses();\n      // this.success = \"Your super admin account has been successfully created\"\n      \n    }, (error) => {\n      console.error(error);\n      console.log(\"edit student not working\");\n      console.log(\"fees id\" + this.fees.id);\n      \n    });\n\n  }\n\n  getStudents() {\n    \n    this.feesService.getStudents()\n     .subscribe(\n       (response) => {\n         this.students = response;\n         console.log(response);\n         console.log(\"get students working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get students not working\")\n\n       }\n     );\n\n  }\n\n  createFeeCategory() {\n    console.log(\"it's creating fee category\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.createFeeCategory(\n        // this.feesForm.value,\n        // this.feesForm.value.category_title,\n        this.fees.category_title\n        // this.feesForm.value.class_assign_to,\n        // this.feesForm.value.student_assign_to,\n        \n\n      ).subscribe((res) => {\n        \n        console.log(res);\n        this.fees.id = res.id;\n        this.displayAll = true;\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n\n  }\n\n  ngOnInit() {\n    // this.feesForm = this.createContactForm();\n  }\n\n  // editFeeCategoryName() {\n  //   console.log(\"it's creating fee category\");\n  //     this.feesService.updateFees(this.feesForm.getRawValue());\n  //     this.feesService.createFeeCategory(\n  //       // this.feesForm.value,\n  //       this.feesForm.value.category_title,\n  //       // this.feesForm.value.class_assign_to,\n  //       // this.feesForm.value.student_assign_to,\n        \n\n  //     ).subscribe((res) => {\n        \n  //       console.log(res);\n  //       this.fees.id = res.id;\n  //       this.displayAll = true;\n      \n  //       console.log(\"successfully logged in\");\n        \n        \n  //     }, (error) => {\n  //       console.error(error);\n  //       // this.error = error.error;\n  //     });\n\n  // }\n}\n\n\n","<div>\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 font-17\">\n                        {{dialogTitle}}</div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <!-- <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"submit\"> -->\n            <div class=\"row\">\n                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Category Title</mat-label>\n                        <input matInput [(ngModel)]=\"fees.category_title\" required>\n                        <mat-icon matSuffix>account_circle</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('category_title').hasError('required')\">\n                            Please enter Category Title\n                        </mat-error>\n                    </mat-form-field>\n                    <ng-template [ngIf]=\"!displayAll\">\n                        <button mat-raised-button color=\"primary\" (click)=\"createFeeCategory()\" aria-label=\"Close dialog\">\n                            Create Category\n                        </button>\n                    </ng-template>\n                    <ng-template [ngIf]=\"displayAll\">\n                        <button mat-raised-button color=\"primary\" (click)=\"confirmAdd()\" aria-label=\"Close dialog\">\n                            Edit Category\n                        </button>\n                    </ng-template>\n                </div>\n            </div>\n            \n            <ng-template [ngIf]=\"displayAll\">\n                <!-- <p>Display working</p> -->\n                <div class=\"row\">\n                    <p><strong>Select Students</strong></p>\n                    <ng-container *ngFor=\"let student of students\" >\n                        <section class=\"example-section\">\n                            <mat-checkbox class=\"example-margin\" (click)=\"editStudent(student.id, student.student_id.id, fees.id)\" [(ngModel)]=\"student.fee_category==fees.id\" >\n                                {{ student.student_id.first_name + ' ' + student.student_id.middle_name + ' ' + student.student_id.last_name }}\n                            </mat-checkbox>\n                        </section>\n                    </ng-container>          \n                </div>\n                <div class=\"row\">\n                    <p><strong>Select Classes</strong></p>\n                    <ng-container *ngFor=\"let class of classes\" >\n                        <section class=\"example-section\">\n                            <mat-checkbox class=\"example-margin\" (click)=\"editClass(class.id, fees.id)\" [(ngModel)]=\"class.fee_category==fees.id\" >{{class.name}}\n                            </mat-checkbox>\n                        </section>\n                    </ng-container>          \n                </div>\n            </ng-template>\n           \n                \n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!feesForm.valid\"\n                            [mat-dialog-close]=\"1\" (click)=\"onNoClick()\">Save</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        <!-- </form> -->\n    </div>\n</div>\n\n<!-- <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                        <mat-label>Student Name</mat-label>\n                        <mat-select formControlName=\"student_assign_to\" required>\n                           \n                                <mat-option *ngFor=\"let student of students\" [value]=\"student.id\">\n                                    {{ student.first_name + ' ' + student.middle_name + ' ' + student.last_name }}\n                                </mat-option>\n                            \n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('student_assign_to').hasError('required')\">\n                            Select student name\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div> -->","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FeesService } from './fees.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { FeeCategory } from './fees.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogCategoryComponent } from './dialogs/form-dialog-category/form-dialog-category.component';\nimport { CategoryDeleteComponent } from './dialogs/category-delete/category-delete.component';\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-fees-category',\n  templateUrl: './fees-category.component.html',\n  styleUrls: ['./fees-category.component.sass']\n})\nexport class FeesCategoryComponent implements OnInit {\n\n  displayedColumns = [\n    'select',\n    'category_title',\n    // 'class_assign_to',\n    // 'student_assign_to',\n    'actions'\n  ];\n  exampleDatabase: FeesService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<FeeCategory>(true, []);\n  id: number;\n  fees: FeeCategory | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public feesService: FeesService,\n    private snackBar: MatSnackBar\n  ) { }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogCategoryComponent, {\n      data: {\n        fees: this.fees,\n        action: 'add'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.feesService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogCategoryComponent, {\n      data: {\n        fees: row,\n        action: 'edit'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          x => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.feesService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(CategoryDeleteComponent, {\n      data: row\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          x => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n        this.selection.select(row)\n      );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<FeeCategory>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new FeesService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup')\n      // .debounceTime(150)\n      // .distinctUntilChanged()\n      .subscribe(() => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: FeeCategory) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { item: item };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<FeeCategory> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this._filterChange.value;\n  }\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n  filteredData: FeeCategory[] = [];\n  renderedData: FeeCategory[] = [];\n  constructor(\n    public _exampleDatabase: FeesService,\n    public _paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<FeeCategory[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page\n    ];\n    this._exampleDatabase.getAllFeess();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this._exampleDatabase.data\n          .slice()\n          .filter((fees: FeeCategory) => {\n            const searchStr = (\n              fees.category_title\n              // fees.class_assign_to +\n              // fees.student_assign_to \n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this._paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() { }\n  /** Returns a sorted copy of the database data. */\n  sortData(data: FeeCategory[]): FeeCategory[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'category_title':\n          [propertyA, propertyB] = [a.category_title, b.category_title];\n          break;\n        // case 'class_assign_to':\n        //   [propertyA, propertyB] = [a.class_assign_to, b.class_assign_to];\n        //   break;\n        // // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\n        // case 'student_assign_to':\n        //   [propertyA, propertyB] = [a.student_assign_to, b.student_assign_to];\n        //   break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n\n\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <ul class=\"breadcrumb breadcrumb-style \">\n                        <li class=\"breadcrumb-item\">\n                            <h4 class=\"page-title\">All Feess</h4>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-1\">\n                            <a routerLink=\"/dashboard/main\">\n                                <i class=\"fas fa-home\"></i> Home</a>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-2\">\n                            <a href=\"#\" onClick=\"return false;\">Feess</a>\n                        </li>\n                        <li class=\"breadcrumb-item active\">All</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"responsive_table\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ml-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>\n                                                    <strong>Feess</strong></h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Search\" type=\"text\" #filter\n                                                    class=\"browser-default search-field\" aria-label=\"Search box\">\n                                            </li>\n                                            <li>\n                                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                                                        <mat-icon class=\"col-white\">delete\n                                                        </mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"icon-button-demo\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"icon-button-demo\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                                <!-- Checkbox Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n                                <!-- ID Column -->\n                                <ng-container matColumnDef=\"category_title\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Category Title</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\">{{row.category_title}}</mat-cell>\n                                </ng-container>\n                                <!-- <ng-container matColumnDef=\"student_assign_to\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Student Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.student_assign_to.last_name + ' ' + row.student_assign_to.first_name}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"class_assign_to\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Class</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                            \n                                                {{row.class_assign_to.name}}\n                                            \n                                        </mat-cell>\n                                </ng-container> -->\n                                <!-- actions -->\n                                <ng-container matColumnDef=\"actions\">\n                                    <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\">\n                                            <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                        </button>\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\">\n                                            <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                            </mat-table>\n                            <!-- context menu start -->\n                            <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                            </div>\n                            <mat-menu #contextMenu=\"matMenu\">\n                                <ng-template matMenuContent let-item=\"item\">\n                                    <button mat-menu-item (click)=\"addNew()\">\n                                        <mat-icon>add_box</mat-icon>\n                                        <span>Add Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"editCall(item)\">\n                                        <mat-icon>create</mat-icon>\n                                        <span>Edit Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"deleteItem(item)\">\n                                        <mat-icon>delete</mat-icon>\n                                        <span>Delete Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"refresh()\">\n                                        <mat-icon>refresh</mat-icon>\n                                        <span>Refresh Record</span>\n                                    </button>\n                                    <button mat-menu-item disabled>\n                                        <mat-icon>no_encryption</mat-icon>\n                                        <span>Disable</span>\n                                    </button>\n                                    <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                                        <mat-icon>list_alt</mat-icon>\n                                        <span> Nested Menu</span>\n                                    </button>\n                                </ng-template>\n                            </mat-menu>\n                            <mat-menu #nestedmenu=\"matMenu\">\n                                <button mat-menu-item>\n                                    <mat-icon>mail_outline</mat-icon>\n                                    <span>Item 1</span>\n                                </button>\n                                <button mat-menu-item>\n                                    <mat-icon>call</mat-icon>\n                                    <span>Item 2</span>\n                                </button>\n                                <button mat-menu-item>\n                                    <mat-icon>chat</mat-icon>\n                                    <span>Item 3</span>\n                                </button>\n                            </mat-menu>\n                            <!-- context menu end -->\n                            <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                                No results\n                            </div>\n                            <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                                [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { formatDate } from '@angular/common';\r\n\r\nexport class FeeCategory {\r\n  constructor(\r\n    public id?: any,\r\n    public category_title?: string,\r\n    // public class_assign_to?: any,\r\n    // public student_assign_to?: any,\r\n    public fee_name?: string,\r\n    public fees_amount?: any,\r\n    public installment_allowed?: any,\r\n    \r\n  ) {\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport class Classes{\r\n  constructor(\r\n      public id?: any,\r\n      public name?: string,\r\n      public available?: any,\r\n      public fee_category?: any\r\n    ) {}\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FeeCategory} from './fees.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport class Classes{\r\n  constructor(\r\n      public id?: any,\r\n      public name?: string,\r\n      public available?: any,\r\n      public fee_category?: any\r\n    ) {}\r\n}\r\n\r\nexport class Student {\r\n  constructor(\r\n      public id?: any,\r\n      public first_name?: string,\r\n      public middle_name?: string,\r\n      public last_name?: string,\r\n      public class_applied_for?: string,\r\n      public exam_score?: any,\r\n      public admit_applicant?: any\r\n  ) {\r\n\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class FeesService {\r\n  API_URL = environment.apiUrl;\r\n  DOMAIN_URL = environment.clientapiUrl;\r\n  PROTOCOL = \"http://\"\r\n  baseurl = this.API_URL;\r\n  domainurl = this.DOMAIN_URL;\r\n  protocol = this.PROTOCOL;\r\n  // private readonly API_URL = 'assets/data/fees.json';\r\n  dataChange: BehaviorSubject<FeeCategory[]> = new BehaviorSubject<FeeCategory[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): FeeCategory[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllFeess(): void {\r\n    this.httpClient.get<FeeCategory[]>(this.baseurl + '/fee/create/fee_category/?expand=student_assign_to,class_assign_to').subscribe(\r\n      data => {\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  // DEMO ONLY, you can find working methods below\r\n  addFees(fees: FeeCategory): void {\r\n    this.dialogData = fees;\r\n  }\r\n  updateFees(fees: FeeCategory): void {\r\n    this.dialogData = fees;\r\n  }\r\n  deleteFees(id: any): void {\r\n    this.deleteFeeCategory(id);\r\n    console.log(id);\r\n  }\r\n\r\n  createFeeCategory(\r\n    category_title: string,\r\n    \r\n  ): Observable<FeeCategory> {\r\n    const url = this.baseurl + '/fee/create/fee_category/';\r\n    const formData = new FormData();\r\n    formData.append('category_title', category_title);\r\n    return this.httpClient.request<FeeCategory>('POST', url, {body: formData});\r\n  }\r\n\r\n  editFeeCategory(\r\n    id: any,\r\n    category_title: string,\r\n  ): Observable<FeeCategory> {\r\n    const url = this.baseurl + '/fee/edit/fee_category/' + id + '/';\r\n    const formData = new FormData();\r\n    formData.append('category_title', category_title);\r\n    return this.httpClient.request<FeeCategory>('PUT', url, {body: formData});\r\n  }\r\n\r\n  deleteFeeCategory(\r\n    id: any\r\n  ): void {\r\n    console.log(\"deleted\");\r\n    this.httpClient.delete<FeeCategory>(this.baseurl + '/fee/edit/fee_category/' + id + '/').subscribe(\r\n      data => {\r\n        console.log(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  editClass(\r\n    id: any,\r\n    fee_category\r\n  ): Observable<Classes> {\r\n    const url = this.baseurl + '/student/edit/class/' + id + '/';\r\n    const formData = new FormData();\r\n    formData.append('fee_category', fee_category);\r\n    return this.httpClient.request<Classes>('PUT', url, {body: formData});\r\n  }\r\n\r\n  editStudent(\r\n    id: any,\r\n    student_id,\r\n    fee_category\r\n  ): Observable<Classes> {\r\n    const url = this.baseurl + '/fee/edit/student_class_detail/' + id + '/';\r\n    const formData = new FormData();\r\n    formData.append('student_id', student_id);\r\n    formData.append('fee_category', fee_category);\r\n    return this.httpClient.request<Classes>('PUT', url, {body: formData});\r\n  }\r\n\r\n  getClasses(): Observable<Classes[]> {\r\n    const url = this.baseurl + '/student/create/class/';\r\n    return this.httpClient.request<Classes[]>('GET', url);\r\n  }\r\n\r\n  getStudents(): Observable<Student[]> {\r\n    const url = this.baseurl + '/fee/create/student_class_detail/?expand=student_id';\r\n    return this.httpClient.request<Student[]>('GET', url);\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FeesService } from '../../fees.service';\n@Component({\n  selector: 'app-discount-delete',\n  templateUrl: './discount-delete.component.html',\n  styleUrls: ['./discount-delete.component.sass']\n})\nexport class DiscountDeleteComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DiscountDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.feesService.deleteFees(this.data.id);\n  }\n}","<div class=\"container\">\n    <h3 mat-dialog-title>Are you sure?</h3>\n    <div mat-dialog-content>\n        <ul class=\"clearfix\">\n            <li>\n                <p><span class=\"font-weight-bold\"> Discount Name: </span>{{data.discount_name}}</p>\n            </li>\n            <li>\n                <p><span class=\"font-weight-bold\"> Amount: </span>{{ data.amount }}</p>\n            </li>\n            <li>\n                <p>\n                    <span class=\"font-weight-bold\">Student assigned to: </span>{{data.student_id.name}}\n                </p>\n            </li>\n        </ul>\n    </div>\n    <div mat-dialog-actions class=\"mb-1\">\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n            Delete\n        </button>\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FeesService,Classes } from '../../fees.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder\n} from '@angular/forms';\nimport { FeesDiscount, Student } from '../../fees';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { formatDate } from '@angular/common';\n\n\n@Component({\n  selector: 'app-form-dialog-discount',\n  templateUrl: './form-dialog-discount.component.html',\n  styleUrls: ['./form-dialog-discount.component.sass']\n})\nexport class FormDialogDiscountComponent {\n\n\n  action: string;\n  dialogTitle: string;\n  classes: Classes[];\n  feesForm: FormGroup;\n  fees:  FeesDiscount;\n  students: Student[];\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogDiscountComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.getClasses();\n    this.getStudents();\n    // this.students = [\n    //   {\n    //     \"id\": \"001\",\n    //     \"first_name\": \"Adeniyi\",\n    //     \"middle_name\": \"Samuel\",\n    //     \"last_name\": \"Adeniyi\",\n    //     \"class_applied_for\": \"001\",\n    //     \"exam_score\": \"200\",\n    //     \"admit_applicant\": true\n    //   },\n    //   {\n    //       \"id\": \"002\",\n    //       \"first_name\": \"Love\",\n    //       \"middle_name\": \"Joseph\",\n    //       \"last_name\": \"Adeniyi\",\n    //       \"class_applied_for\": \"003\",\n    //       \"exam_score\": \"200\",\n    //       \"admit_applicant\": true\n    //   },\n    //   {\n    //       \"id\": \"003\",\n    //       \"first_name\": \"Treasure\",\n    //       \"middle_name\": \"Temi\",\n    //       \"last_name\": \"Arowosafe\",\n    //       \"class_applied_for\": \"002\",\n    //       \"exam_score\": \"200\",\n    //       \"admit_applicant\": true\n    //   }\n      \n    // ];\n    this.action = data.action;\n    if (this.action === 'edit') {\n      console.log(data.fees.date);\n      this.dialogTitle = data.fees.sName;\n      this.fees = data.fees;\n    } else {\n      this.dialogTitle = 'New Fees';\n      this.fees = new  FeesDiscount ({});\n    }\n    this.feesForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.fees.id],\n      discount_name: [this.fees.discount_name, [Validators.required]],\n      discount_code: [this.fees.discount_code, [Validators.required]],\n      student_id: [this.fees.student_id, [Validators.required]],\n      discount_amount: [this.fees.discount_amount, [Validators.required]],\n      discount_description: [this.fees.discount_description, [Validators.required]],\n      // status: [this.fees.status, [Validators.required]],\n      // amount: [this.fees., [Validators.required]]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.feesService.addFees(this.feesForm.getRawValue());\n    if(this.action === 'edit') {\n      console.log(\"it's editing\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.editFeesDiscount(\n        // this.feesForm.value,\n        this.feesForm.value.id,\n        this.feesForm.value.discount_name,\n        this.feesForm.value.discount_code,\n        this.feesForm.value.student_id.id,\n        this.feesForm.value.discount_amount,\n        this.feesForm.value.discount_description\n        \n\n      ).subscribe((res) => {\n        \n        console.log(res);\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        console.log(this.feesForm.value.student_id);\n        // this.error = error.error;\n      });\n\n    } else {\n      console.log(\"it's adding\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.createFeesDiscount(\n        // this.feesForm.value,\n        this.feesForm.value.discount_name,\n        this.feesForm.value.discount_code,\n        this.feesForm.value.student_id,\n        this.feesForm.value.discount_amount,\n        this.feesForm.value.discount_description\n        \n\n      ).subscribe((res) => {\n        \n        console.log(res);\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n\n    }\n  }\n\n  getClasses() {\n    \n    this.feesService.getClasses()\n     .subscribe(\n       (response) => {\n         this.classes = response;\n         console.log(response);\n         console.log(\"get classes working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get classes not working\")\n\n       }\n     );\n\n  }\n\n  getStudents() {\n    \n    this.feesService.getStudents()\n     .subscribe(\n       (response) => {\n         this.students = response;\n         console.log(response);\n         console.log(\"get classes working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get classes not working\")\n\n       }\n     );\n\n  }\n\n  \n}\n\n\n\n\n","<div >\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 font-17\">\n                        {{ fees.student_id.first_name + ' ' + fees.student_id.middle_name + ' ' + fees.student_id.last_name }}</div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"submit\">\n            <div class=\"row\">\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Discount Name</mat-label>\n                        <input matInput formControlName=\"discount_name\" required>\n                        <mat-icon matSuffix>account_circle</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('discount_name').hasError('required')\">\n                            Please enter student name\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Discouunt Code</mat-label>\n                        <input matInput formControlName=\"discount_code\" required>\n                        <mat-icon matSuffix>account_circle</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('discount_code').hasError('required')\">\n                            Please enter class name\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                        <mat-label>Assign to student</mat-label>\n                        <mat-select matInput formControlName=\"student_id\" required>\n                        \n                            <mat-option *ngFor=\"let student of fees.student_id\" [value]=\"student.id\">\n                                \n                            </mat-option>\n                       \n                            \n                            \n                            \n                            \n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('student_id').hasError('required')\">\n                            Select student name\n                        </mat-error> \n                    </mat-form-field>\n                </div> -->\n                <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Assign to student</mat-label>\n                        <input matInput formControlName=\"assign_students\" required>\n                        <mat-icon matSuffix>receipt</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('assign_students').hasError('required')\">\n                            Enter student assign to\n                        </mat-error>\n                    </mat-form-field>\n                </div> -->\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Discount Amount</mat-label>\n                        <input matInput formControlName=\"discount_amount\" required>\n                        <mat-icon matSuffix>receipt</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('discount_amount').hasError('required')\">\n                            Enter fees amount\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                \n            </div>\n            <div class=\"row\">\n              \n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Description</mat-label>\n                    <textarea matInput formControlName=\"discount_description\"></textarea>\n                  </mat-form-field>\n                </div>\n            </div>\n           \n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!feesForm.valid\"\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DiscountDeleteComponent } from './dialogs/discount-delete/discount-delete.component';\nimport { FormDialogDiscountComponent } from './dialogs/form-dialog-discount/form-dialog-discount.component';\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FeesService } from '../fees-discount/fees.service';\nimport { FeesDiscount } from '../fees-discount/fees';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-fees-discount',\n  templateUrl: './fees-discount.component.html',\n  styleUrls: ['./fees-discount.component.sass']\n})\nexport class FeesDiscountComponent implements OnInit {\n\n  displayedColumns = [\n    // public id?: any,\n    //     public discount_name?: string,\n    //     public discount_code?: string,\n    //     public amount?: any,\n    //     public description?: any,\n    //     public assign_students?: any,\n    'select',\n    'discount_name',\n    'discount_code',\n    'discount_amount',\n    'student_id',\n    'actions'\n  ];\n  exampleDatabase: FeesService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<FeesDiscount>(true, []);\n  id: number;\n  fees: FeesDiscount | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public feesService: FeesService,\n    private snackBar: MatSnackBar\n  ) { }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogDiscountComponent, {\n      data: {\n        fees: this.fees,\n        action: 'add'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.feesService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogDiscountComponent, {\n      data: {\n        fees: row,\n        action: 'edit'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          x => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.feesService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DiscountDeleteComponent, {\n      data: row\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          x => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n        this.selection.select(row)\n      );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<FeesDiscount>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new FeesService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup')\n      // .debounceTime(150)\n      // .distinctUntilChanged()\n      .subscribe(() => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: FeesDiscount) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { item: item };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<FeesDiscount> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this._filterChange.value;\n  }\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n  filteredData: FeesDiscount[] = [];\n  renderedData: FeesDiscount[] = [];\n  constructor(\n    public _exampleDatabase: FeesService,\n    public _paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<FeesDiscount[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page\n    ];\n    // public id?: any,\n    //     public discount_name?: string,\n    //     public discount_code?: string,\n    //     public amount?: any,\n    //     public description?: any,\n    //     public assign_students?: any,\n    this._exampleDatabase.getAllFeess();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this._exampleDatabase.data\n          .slice()\n          .filter((fees: FeesDiscount) => {\n            const searchStr = (\n              fees.discount_name +\n              fees.discount_code +\n              fees.discount_amount +\n              fees.discount_description\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this._paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() { }\n  /** Returns a sorted copy of the database data. */\n  sortData(data: FeesDiscount[]): FeesDiscount[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'discount_name':\n          [propertyA, propertyB] = [a.discount_name, b.discount_name];\n          break;\n        case 'discount_code':\n          [propertyA, propertyB] = [a.discount_code, b.discount_code];\n          break;\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\n        case 'student_id':\n          [propertyA, propertyB] = [a.student_id.last_name, b.student_id.last_name];\n          break;\n        case 'amount':\n          [propertyA, propertyB] = [a.discount_amount, b.discount_amount];\n          break;\n        case 'discount_description':\n          [propertyA, propertyB] = [a.discount_description, b.discount_description];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <ul class=\"breadcrumb breadcrumb-style \">\n                        <li class=\"breadcrumb-item\">\n                            <h4 class=\"page-title\">Fees Dicount</h4>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-1\">\n                            <a routerLink=\"/dashboard/main\">\n                                <i class=\"fas fa-home\"></i> Home</a>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-2\">\n                            <a href=\"#\" onClick=\"return false;\">Discount</a>\n                        </li>\n                        <li class=\"breadcrumb-item active\">All</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"responsive_table\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ml-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>\n                                                    <strong>Feess</strong></h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Search\" type=\"text\" #filter\n                                                    class=\"browser-default search-field\" aria-label=\"Search box\">\n                                            </li>\n                                            <li>\n                                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                                                        <mat-icon class=\"col-white\">delete\n                                                        </mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <!-- <li>\n                                                <div class=\"icon-button-demo\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li> -->\n                                            <li>\n                                                <div class=\"icon-button-demo\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                                <!-- Checkbox Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n                                <!-- ID Column -->\n                                <!-- <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                                </ng-container> -->\n                                <ng-container matColumnDef=\"discount_name\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Discount Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.discount_name}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"discount_code\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Discount Code</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.discount_code}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"discount_amount\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Amount</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.discount_amount }}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"student_id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Student Assign to</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.student_id.last_name + ' ' + row.student_id.middle_name + ' ' + row.student_id.first_name }}</mat-cell>\n                                </ng-container>\n                    \n                                \n                                \n                                <!-- actions -->\n                                <ng-container matColumnDef=\"actions\">\n                                    <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\">\n                                            <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                        </button>\n                                        <!-- <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\">\n                                            <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                            </mat-table>\n                            <!-- context menu start -->\n                            <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                            </div>\n                            <mat-menu #contextMenu=\"matMenu\">\n                                <ng-template matMenuContent let-item=\"item\">\n                                    <button mat-menu-item (click)=\"addNew()\">\n                                        <mat-icon>add_box</mat-icon>\n                                        <span>Add Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"editCall(item)\">\n                                        <mat-icon>create</mat-icon>\n                                        <span>Edit Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"deleteItem(item)\">\n                                        <mat-icon>delete</mat-icon>\n                                        <span>Delete Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"refresh()\">\n                                        <mat-icon>refresh</mat-icon>\n                                        <span>Refresh Record</span>\n                                    </button>\n                                    <button mat-menu-item disabled>\n                                        <mat-icon>no_encryption</mat-icon>\n                                        <span>Disable</span>\n                                    </button>\n                                    <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                                        <mat-icon>list_alt</mat-icon>\n                                        <span> Nested Menu</span>\n                                    </button>\n                                </ng-template>\n                            </mat-menu>\n                            <mat-menu #nestedmenu=\"matMenu\">\n                                <button mat-menu-item>\n                                    <mat-icon>mail_outline</mat-icon>\n                                    <span>Item 1</span>\n                                </button>\n                                <button mat-menu-item>\n                                    <mat-icon>call</mat-icon>\n                                    <span>Item 2</span>\n                                </button>\n                                <button mat-menu-item>\n                                    <mat-icon>chat</mat-icon>\n                                    <span>Item 3</span>\n                                </button>\n                            </mat-menu>\n                            <!-- context menu end -->\n                            <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                                No results\n                            </div>\n                            <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                                [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport {  FeesDiscount, Student } from '../fees-discount/fees';\n\nexport class Classes{\n  constructor(\n      public id?: any,\n      public name?: string,\n      public available?: any\n    ) {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeesService {\n  API_URL = environment.apiUrl;\n  DOMAIN_URL = environment.clientapiUrl;\n  PROTOCOL = \"http://\"\n  baseurl = this.API_URL;\n  domainurl = this.DOMAIN_URL;\n  protocol = this.PROTOCOL;\n  private readonly API_CLASS = 'assets/data/my-classes.json';\n  private readonly API_STUDENT = 'assets/data/my-students.json';\n\n\n  private readonly API_URLS = 'assets/data/discount.json';\n  dataChange: BehaviorSubject<FeesDiscount[]> = new BehaviorSubject<FeesDiscount[]>([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {}\n  get data(): FeesDiscount[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllFeess(): void {\n    this.httpClient.get<FeesDiscount[]>(this.baseurl + '/fee/create/fees_discount/?expand=student_id').subscribe(\n    // this.httpClient.get<FeesDiscount[]>(this.API_URLS).subscribe(\n      data => {\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n        console.log(error.name + ' ' + error.message);\n      }\n    );\n  }\n  // DEMO ONLY, you can find working methods below\n  addFees(fees: FeesDiscount): void {\n    this.dialogData = fees;\n    // this.createFeesDiscount(fees);\n  }\n  updateFees(fees: FeesDiscount): void {\n    this.dialogData = fees;\n    // this.editFeesDiscount(fees);\n  }\n  deleteFees(id: number): void {\n    console.log(id);\n    this.deleteFeesDiscount(id);\n  }\n  \n\n  createFeesDiscount(\n    // fees: FeesDiscount\n    discount_name: string,\n    discount_code: string,\n    student_id: any,\n    discount_amount: string,\n    discount_description: string\n    \n  ): Observable<FeesDiscount> {\n    const url = this.baseurl + '/fee/create/fees_discount/';\n    const formData = new FormData();\n    formData.append('discount_name', discount_name);\n    formData.append('discount_code', discount_code);\n    formData.append('discount_amount', discount_amount);\n    formData.append('discount_description', discount_description);\n    formData.append('student_id', student_id);\n    return this.httpClient.request<FeesDiscount>('POST', url, {body: formData});\n  }\n\n  editFeesDiscount(\n    // fees: FeesDiscount\n    id: any, \n    discount_name: string,\n    discount_code: string,\n    student_id: any,\n    discount_amount: string,\n    discount_description: string\n    // id: any,\n    // fees_name: string,\n    // fees_amount: string,\n    // installment_allowed: any,\n    // assign_to_classes: any,\n    // assign_to_students: any\n  ): Observable<FeesDiscount> {\n    const url = this.baseurl + '/fee/edit/fees_discount/' + id + '/';\n    const formData = new FormData();\n    formData.append('discount_name', discount_name);\n    formData.append('discount_code', discount_code);\n    formData.append('discount_amount', discount_amount);\n    formData.append('discount_description', discount_description);\n    formData.append('student_id', student_id);\n    return this.httpClient.request<FeesDiscount>('PUT', url, {body: formData});\n  }\n\n  deleteFeesDiscount(id: any): Observable<FeesDiscount> {\n    const url = this.baseurl + '/fee/edit/fees_discount/' + id + '/';\n    return this.httpClient.request<FeesDiscount>('DELETE', url);\n  }\n\n  // getClasses(): Observable<Classes[]> {\n  //   const url = this.API_CLASS;\n  //   return this.httpClient.request<Classes[]>('GET', url);\n  // }\n\n  // getStudents(): Observable<Student[]> {\n  //   const url = this.API_STUDENT;\n  //   return this.httpClient.request<Student[]>('GET', url);\n  // }\n\n  getClasses(): Observable<Classes[]> {\n    const url = this.baseurl + '/student/create/class/';\n    return this.httpClient.request<Classes[]>('GET', url);\n  }\n\n  getStudents(): Observable<Student[]> {\n    const url = this.baseurl + '/student/create/student_exam/';\n    return this.httpClient.request<Student[]>('GET', url);\n  }\n\n  \n}\n\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient} from '@angular/common/http';\n// import { Observable } from 'rxjs';\n// import { finalize, tap } from 'rxjs/operators';\n// import { environment } from '../../../environments/environment';\n// import { PaymentMethod, BankDetails, SetUpFees, FeesDiscount, FeeReport } from '../setup/fees';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class FeesService {\n//   API_URL = environment.apiUrl;\n//   DOMAIN_URL = environment.clientapiUrl;\n//   PROTOCOL = \"http://\"\n//   baseurl = this.API_URL;\n//   domainurl = this.DOMAIN_URL;\n//   protocol = this.PROTOCOL;\n\n//   constructor(\n//     private http: HttpClient\n//   ) { }\n\n  \n//   createPaymentMethod(\n//     secret_key: string,\n//     public_key: string\n    \n//   ): Observable<PaymentMethod> {\n//     const url = this.baseurl + '/fee/create/payment_method/';\n//     const formData = new FormData();\n//     formData.append('secret_key', secret_key);\n//     formData.append('public_key', public_key);\n//     return this.http.request<PaymentMethod>('POST', url, {body: formData});\n//   }\n\n//   editPaymentMethod(\n//     id: any,\n//     secret_key: string,\n//     public_key: string\n//   ): Observable<PaymentMethod> {\n//     const url = this.baseurl + '/fee/edit/payment_method/' + id + '/';\n//     const formData = new FormData();\n//     formData.append('secret_key', secret_key);\n//     formData.append('public_key', public_key);\n//     return this.http.request<PaymentMethod>('PUT', url, {body: formData});\n//   }\n\n//   getPaymentMethod(): Observable<PaymentMethod> {\n//     const url = this.baseurl + '/fee/create/payment_method/';\n//     return this.http.request<PaymentMethod>('GET', url);\n//   }\n\n//   createBankDetails(\n//     // secret_key: string,\n//     // public_key: string\n    \n//   ): Observable<PaymentMethod> {\n//     const url = this.baseurl + '/fee/create/bank_details/';\n//     const formData = new FormData();\n//     // formData.append('secret_key', secret_key);\n//     // formData.append('public_key', public_key);\n//     return this.http.request<PaymentMethod>('POST', url, {body: formData});\n//   }\n\n//   editBankDetails(\n//     id: any,\n//     // secret_key: string,\n//     // public_key: string\n//   ): Observable<PaymentMethod> {\n//     const url = this.baseurl + '/fee/edit/bank_details/' + id + '/';\n//     const formData = new FormData();\n//     // formData.append('secret_key', secret_key);\n//     // formData.append('public_key', public_key);\n//     return this.http.request<PaymentMethod>('PUT', url, {body: formData});\n//   }\n\n//   getBankDetails(): Observable<PaymentMethod> {\n//     const url = this.baseurl + '/fee/create/bank_details/';\n//     return this.http.request<PaymentMethod>('GET', url);\n//   }\n\n//   createSetUpFees(\n//     fees_name: string,\n//     fees_amount: string,\n//     installment_allowed: any\n    \n//   ): Observable<SetUpFees> {\n//     const url = this.baseurl + '/fee/create/setup_fee/';\n//     const formData = new FormData();\n//     formData.append('fees_name', fees_name);\n//     formData.append('fees_amount', fees_amount);\n//     formData.append('installment_allowed', installment_allowed);\n//     return this.http.request<SetUpFees>('POST', url, {body: formData});\n//   }\n\n//   editSetUpFees(\n//     id: any,\n//     fees_name: string,\n//     fees_amount: string,\n//     installment_allowed: any\n//   ): Observable<SetUpFees> {\n//     const url = this.baseurl + '/fee/edit/setup_fee/' + id + '/';\n//     const formData = new FormData();\n//     formData.append('fees_name', fees_name);\n//     formData.append('fees_amount', fees_amount);\n//     formData.append('installment_allowed', installment_allowed);\n//     return this.http.request<SetUpFees>('PUT', url, {body: formData});\n//   }\n\n//   getSetUpFees(): Observable<SetUpFees> {\n//     const url = this.baseurl + '/fee/create/setup_fee/';\n//     return this.http.request<SetUpFees>('GET', url);\n//   }\n\n//   createFeesDiscount(\n//     fees_name: string,\n//     fees_amount: string,\n//     installment_allowed: any,\n//     assign_to_classes: any,\n//     assign_to_students: any\n    \n//   ): Observable<FeesDiscount> {\n//     const url = this.baseurl + '/fee/create/fees_discount/';\n//     const formData = new FormData();\n//     formData.append('fees_name', fees_name);\n//     formData.append('fees_amount', fees_amount);\n//     formData.append('installment_allowed', installment_allowed);\n//     formData.append('assign_to_classes', assign_to_classes);\n//     formData.append('assign_to_students', assign_to_students);\n//     return this.http.request<FeesDiscount>('POST', url, {body: formData});\n//   }\n\n//   editFeesDiscount(\n//     id: any,\n//     fees_name: string,\n//     fees_amount: string,\n//     installment_allowed: any,\n//     assign_to_classes: any,\n//     assign_to_students: any\n//   ): Observable<FeesDiscount> {\n//     const url = this.baseurl + '/fee/edit/fees_discount/' + id + '/';\n//     const formData = new FormData();\n//     formData.append('fees_name', fees_name);\n//     formData.append('fees_amount', fees_amount);\n//     formData.append('installment_allowed', installment_allowed);\n//     formData.append('assign_to_classes', assign_to_classes);\n//     formData.append('assign_to_students', assign_to_students);\n//     return this.http.request<FeesDiscount>('PUT', url, {body: formData});\n//   }\n\n//   getFeesDiscount(): Observable<FeesDiscount> {\n//     const url = this.baseurl + '/fee/create/fees_discount/';\n//     return this.http.request<FeesDiscount>('GET', url);\n//   }\n\n//   createFeeReport(\n//     student_name: string,\n//     classes: string,\n//     total_fees_assigned: any,\n//     total_amount_paid: any,\n//     balance_to_pay: any,\n//     payment_due_date: any,\n//     last_payment_date: any,\n//     status: any\n    \n//   ): Observable<FeesDiscount> {\n//     const url = this.baseurl + '/fee/create/fees_report/';\n//     const formData = new FormData();\n//     formData.append('student_name', student_name);\n//     formData.append('classes', classes);\n//     formData.append('total_fees_assigned', total_fees_assigned);\n//     formData.append('total_amount_paid', total_amount_paid);\n//     formData.append('balance_to_pay', balance_to_pay);\n//     formData.append('payment_due_date', payment_due_date);\n//     formData.append('last_payment_date', last_payment_date);\n//     formData.append('status', status);\n//     return this.http.request<FeesDiscount>('POST', url, {body: formData});\n//   }\n\n//   editFeeReport(\n//     id: any,\n//     student_name: string,\n//     classes: string,\n//     total_fees_assigned: any,\n//     total_amount_paid: any,\n//     balance_to_pay: any,\n//     payment_due_date: any,\n//     last_payment_date: any,\n//     status: any\n//   ): Observable<FeesDiscount> {\n//     const url = this.baseurl + '/fee/edit/fees_report/' + id + '/';\n//     const formData = new FormData();\n//     formData.append('student_name', student_name);\n//     formData.append('classes', classes);\n//     formData.append('total_fees_assigned', total_fees_assigned);\n//     formData.append('total_amount_paid', total_amount_paid);\n//     formData.append('balance_to_pay', balance_to_pay);\n//     formData.append('payment_due_date', payment_due_date);\n//     formData.append('last_payment_date', last_payment_date);\n//     formData.append('status', status);\n//     return this.http.request<FeesDiscount>('PUT', url, {body: formData});\n//   }\n\n//   getFeeReport(): Observable<FeesDiscount> {\n//     const url = this.baseurl + '/fee/create/fees_report/';\n//     return this.http.request<FeesDiscount>('GET', url);\n//   }\n// }\n","export class FeesDiscount{\n    constructor(\n        public id?: any,\n        public student_id?: any,\n        public discount_name?: string,\n        public discount_code?: string,\n        public discount_amount?: any,\n        public discount_description?: any,\n        // public assign_students?: Student,\n    ) {}\n}\n\n\nexport class Student {\n    constructor(\n        public id?: any,\n        public first_name?: string,\n        public middle_name?: string,\n        public last_name?: string,\n        public class_applied_for?: string,\n        public exam_score?: any,\n        public admit_applicant?: any\n    ) {\n  \n    }\n  }\n\n// class PaymentMethod(models.Model):\n//     secret_key = models.CharField(max_length=80)\n//     public_key = models.CharField(max_length=80)\n\n// class BankDetails(models.Model):\n//     pass\n\n// class SetUpFees(models.Model):\n//     fees_name = models.CharField(max_length=30)\n//     fees_amount = models.CharField(max_length=30)\n//     installment_allowed = models.BooleanField()\n//     # assign_to_classes = models.ManyToManyField()\n//     # assign_to_students = models.ManyToManyField(User)\n    \n// class FeesDiscount(models.Model):\n//     discount_name = models.CharField(max_length=50)\n//     discount_code = models.CharField(max_length=80)\n//     amount = models.IntegerField()\n//     description = models.TextField()\n//     # assign_students = models.ManyToManyField()\n\n// class FeeReport(models.Model):\n//     student_name = models.CharField(max_length=50)\n//     # classes = models.OneToOneField()\n//     total_fees_assigned = models.IntegerField()\n//     total_amount_paid = models.IntegerField()\n//     balance_to_pay = models.IntegerField()\n//     payment_due_date = models.DateField()\n//     last_payment_date = models.DateField()\n//     status = models.CharField(max_length=20)","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FeesService } from '../setup/fees.service';\nimport { PaymentMethod } from '../setup/fees';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-fees-report',\n  templateUrl: './fees-report.component.html',\n  styleUrls: ['./fees-report.component.sass']\n})\nexport class FeesReportComponent implements OnInit {\n\n  // domain: any;\n  // loginForm: FormGroup;\n  method: PaymentMethod = new PaymentMethod();\n  submitted = false;\n  returnUrl: string;\n  hide = true;\n  success: any;\n  error: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private feesService: FeesService,\n    private snackBar: MatSnackBar\n  ) {\n    // route.params.subscribe(params => { this.domain = params['id']; });\n  }\n  ngOnInit() {\n    this.getPaymentMethod();\n  \n  }\n  \n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n\n  editPayMethod(): void {\n    // this.feesService.editPaymentMethod(\n    //   this.method.id,\n    //   this.method.public_key,\n    //   this.method.secret_key,\n    // ).subscribe((res) => {\n    //   // console.log(this.login.role);\n    //   console.log(res);\n    //   // console.log(res.data.id);\n    //   console.log(\"successfully logged in\");\n    //   this.showNotification(\n    //     'snackbar-success',\n    //     'Set Up successfully updated...!!!',\n    //     'bottom',\n    //     'center'\n    //   );\n    //   this.getPaymentMethod();\n    //   this.success = res;\n    //   // this.success = \"Your super admin account has been successfully created\"\n      \n    // }, (error) => {\n    //   console.error(error);\n      \n    // });\n\n  }\n\n  getPaymentMethod() {\n    \n  //   this.feesService.getPaymentMethod()\n  //    .subscribe(\n  //      (response) => {\n  //        this.method = response[0];\n  //        console.log(response[0]);\n  //       //  this.getParentProfile();\n\n  //      }, (error) => {\n  //        console.error(error);\n  //      }\n  //    );\n\n  // \n}\n\n}\n","<p>fees-report works!</p>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllFeesComponent } from './all-fees/all-fees.component';\r\nimport { AddFeesComponent } from './add-fees/add-fees.component';\r\nimport { EditFeesComponent } from './edit-fees/edit-fees.component';\r\nimport { FeeReceiptComponent } from './fee-receipt/fee-receipt.component';\r\nimport { PaymentMethodComponent } from './payment-method/payment-method.component';\r\nimport { FeesCategoryComponent } from './fees-category/fees-category.component';\r\nimport { SetupComponent } from './setup/setup.component';\r\nimport { FeesDiscountComponent } from './fees-discount/fees-discount.component';\r\nimport { FeesReportComponent } from './fees-report/fees-report.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-fees',\r\n    component: AllFeesComponent\r\n  },\r\n  {\r\n    path: 'add-fees',\r\n    component: AddFeesComponent\r\n  },\r\n  {\r\n    path: 'edit-fees',\r\n    component: EditFeesComponent\r\n  },\r\n  {\r\n    path: 'fee-receipt',\r\n    component: FeeReceiptComponent\r\n  },\r\n  {\r\n    path: 'method',\r\n    component: PaymentMethodComponent\r\n  },\r\n  {\r\n    path: 'category',\r\n    component: FeesCategoryComponent\r\n  },\r\n  {\r\n    path: 'setup',\r\n    component: SetupComponent\r\n  },\r\n  {\r\n    path: 'discount',\r\n    component: FeesDiscountComponent\r\n  },\r\n  {\r\n    path: 'report',\r\n    component: FeesReportComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FeesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { FeesRoutingModule } from './fees-routing.module';\r\nimport { AllFeesComponent } from './all-fees/all-fees.component';\r\nimport { AddFeesComponent } from './add-fees/add-fees.component';\r\nimport { EditFeesComponent } from './edit-fees/edit-fees.component';\r\nimport { FeeReceiptComponent } from './fee-receipt/fee-receipt.component';\r\nimport { DeleteDialogComponent } from './all-fees/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-fees/dialogs/form-dialog/form-dialog.component';\r\nimport { PaymentMethodComponent } from './payment-method/payment-method.component';\r\nimport { FeesCategoryComponent } from './fees-category/fees-category.component';\r\nimport { FormDialogCategoryComponent } from './fees-category/dialogs/form-dialog-category/form-dialog-category.component';\r\nimport { CategoryDeleteComponent } from './fees-category/dialogs/category-delete/category-delete.component';\r\nimport { SetupComponent } from './setup/setup.component';\r\nimport { FormDialogAddComponent } from './setup/dialogs/form-dialog-add/form-dialog-add.component';\r\nimport { FormDialogDeleteComponent } from './setup/dialogs/form-dialog-delete/form-dialog-delete.component';\r\nimport { FormDialogEditComponent } from './setup/dialogs/form-dialog-edit/form-dialog-edit.component';\r\nimport { FeesDiscountComponent } from './fees-discount/fees-discount.component';\r\nimport { FeesReportComponent } from './fees-report/fees-report.component';\r\nimport { FormDialogDiscountComponent } from './fees-discount/dialogs/form-dialog-discount/form-dialog-discount.component';\r\nimport { DiscountDeleteComponent } from './fees-discount/dialogs/discount-delete/discount-delete.component';\r\nimport { FeesService} from './fees-category/fees.service';\r\n@NgModule({\r\n  declarations: [\r\n    AllFeesComponent,\r\n    AddFeesComponent,\r\n    EditFeesComponent,\r\n    FeeReceiptComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    PaymentMethodComponent,\r\n    FeesCategoryComponent,\r\n    SetupComponent,\r\n    FeesDiscountComponent,\r\n    FeesReportComponent,\r\n    FormDialogAddComponent,\r\n    FormDialogEditComponent,\r\n    FormDialogCategoryComponent,\r\n    CategoryDeleteComponent,\r\n    FormDialogDeleteComponent,\r\n    FormDialogDiscountComponent,\r\n    DiscountDeleteComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FeesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxDatatableModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    MatRadioModule\r\n  ],\r\n  providers: [\r\n    FeesService\r\n\r\n  ]\r\n})\r\nexport class FeesModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FeesService } from '../setup/fees.service';\nimport { PaymentMethod } from '../setup/fees';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-payment-method',\n  templateUrl: './payment-method.component.html',\n  styleUrls: ['./payment-method.component.sass']\n})\nexport class PaymentMethodComponent implements OnInit {\n\n  // domain: any;\n  // loginForm: FormGroup;\n  method: PaymentMethod = new PaymentMethod();\n  submitted = false;\n  returnUrl: string;\n  hide = true;\n  success: any;\n  error: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private feesService: FeesService,\n    private snackBar: MatSnackBar\n  ) {\n    // route.params.subscribe(params => { this.domain = params['id']; });\n  }\n  ngOnInit() {\n    this.getPaymentMethod();\n  \n  }\n  \n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n\n  editPayMethod(): void {\n    this.feesService.editPaymentMethod(\n      this.method.id,\n      this.method.public_key,\n      this.method.secret_key,\n    ).subscribe((res) => {\n      // console.log(this.login.role);\n      console.log(res);\n      // console.log(res.data.id);\n      console.log(\"successfully logged in\");\n      this.showNotification(\n        'snackbar-success',\n        'Set Up successfully updated...!!!',\n        'bottom',\n        'center'\n      );\n      this.getPaymentMethod();\n      this.success = res;\n      // this.success = \"Your super admin account has been successfully created\"\n      \n    }, (error) => {\n      console.error(error);\n      \n    });\n\n  }\n\n  getPaymentMethod() {\n    \n    this.feesService.getPaymentMethod()\n     .subscribe(\n       (response) => {\n         this.method = response[0];\n         console.log(response[0]);\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n       }\n     );\n\n  }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <ul class=\"breadcrumb breadcrumb-style \">\n                        <li class=\"breadcrumb-item\">\n                            <h4 class=\"page-title\">Tabs</h4>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-1\">\n                            <a routerLink=\"/dashboard/main\">\n                                <i class=\"fas fa-home\"></i> Front Office</a>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-2\">\n                            <a href=\"#\" onClick=\"return false;\">Set Up</a>\n                        </li>\n                        <li class=\"breadcrumb-item active\">Tabs</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"header\">\n                        <h2>Set Up Settings\n                        </h2>\n                        <ul class=\"header-dropdown m-r--5\">\n                            <li class=\"dropdown\">\n                                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\"\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i class=\"material-icons\">more_vert</i>\n                                </a>\n                                <ul class=\"dropdown-menu pull-right\">\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Another action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Something else here</a>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"body\">\n                        <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs mat-elevation-z4\">\n                            <mat-tab label=\"Payment Method\"> \n                                <div class=\"card\">\n                                    <div class=\"header\">\n                                        <h2>\n                                            <strong>Set </strong> Payment Method </h2>\n                                    </div>\n                                    <div class=\"body\">\n                                        <form  #f=\"ngForm\" (ngSubmit)=\"editPayMethod()\">\n                                            <div class=\"example-container\">\n                                               \n                                                <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                    <mat-label>Secret Key</mat-label>\n                                                    <textarea matInput [(ngModel)]=\"method.secret_key\" name=\"secret_key\"></textarea>\n                                                  </mat-form-field>\n                                                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                    <mat-label>Public Key</mat-label>\n                                                    <textarea matInput [(ngModel)]=\"method.public_key\" name=\"public_key\"></textarea>\n                                                  </mat-form-field>\n        \n                                                \n                                                </div>      \n                                            <button type=\"submit\" mat-raised-button color=\"primary\">Save</button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </mat-tab>\n        \n                        </mat-tab-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FeesService, Classes } from '../../fees.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder\n} from '@angular/forms';\nimport { SetUpFees, Student } from '../../fees';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-form-dialog-add',\n  templateUrl: './form-dialog-add.component.html',\n  styleUrls: ['./form-dialog-add.component.sass']\n})\nexport class FormDialogAddComponent {\n\n  action: string;\n  dialogTitle: string;\n  feesForm: FormGroup;\n  fees:  SetUpFees;\n  classes: Classes[];\n  students: Student[];\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogAddComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    // this.getClasses();\n    // this.getStudents();\n    this.action = data.action;\n    if (this.action === 'edit') {\n      console.log(data.fees.date);\n      this.dialogTitle = data.fees.sName;\n      this.fees = data.fees;\n    } else {\n      this.dialogTitle = 'New Setup';\n      this.fees = new  SetUpFees({});\n    }\n    this.feesForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.fees.id],\n      category_title: [this.fees.category_title, [Validators.required]],\n      fees_name: [this.fees.fees_name, [Validators.required]],\n      fees_amount: [this.fees.fees_amount, [Validators.required]],\n      installment_allowed: [this.fees.installment_allowed, [Validators.required]],\n      // status: [this.fees.status, [Validators.required]],\n      // amount: [this.fees., [Validators.required]]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.feesService.addFees(this.feesForm.getRawValue());\n    if(this.action === 'edit') {\n      console.log(\"it's editing\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.editSetUpFees(\n        this.feesForm.value.id,\n        this.feesForm.value.category_title,\n        this.feesForm.value.fees_name,\n        this.feesForm.value.fees_amount,\n        this.feesForm.value.installment_allowed,\n        \n\n      ).subscribe((res) => {\n        \n        console.log(res);\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n    //   fees_name: string,\n    // fees_amount: string,\n    // installment_allowed: any,\n    // class_assigned_to: any,\n    // student_assigned_to:any\n\n    } else {\n      console.log(\"it's adding\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      console.log(this.feesForm.value.class_assigned_to);\n      console.log(this.feesForm.value.student_assigned_to);\n      console.log(\"class assigned to is\" + this.feesForm.value.class_assigned_to);\n      console.log(\"student assigned to is\" + this.feesForm.value.student_assigned_to);\n      this.feesService.createSetUpFees(\n        this.feesForm.value.fees_name,\n        this.feesForm.value.fees_amount,\n        this.feesForm.value.installment_allowed,\n        this.feesForm.value.class_assigned_to,\n        this.feesForm.value.student_assigned_to\n        \n\n      ).subscribe((res) => {\n        \n        console.log(res);\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n\n    }\n  }\n\n  getClasses() {\n    \n    this.feesService.getClasses()\n     .subscribe(\n       (response) => {\n         this.classes = response;\n         console.log(response);\n         console.log(\"get classes working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get classes not working\")\n\n       }\n     );\n\n  }\n\n  getStudents() {\n    \n    this.feesService.getStudents()\n     .subscribe(\n       (response) => {\n         this.students = response;\n         console.log(response);\n         console.log(\"get classes working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get classes not working\")\n\n       }\n     );\n\n  }\n}\n\n\n\n","<div >\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 font-17\">\n                        {{dialogTitle}}</div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"submit\">\n            <!-- <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                        <mat-label>Student Name</mat-label>\n                        <mat-select formControlName=\"student_assigned_to\" required>\n                            \n                                <mat-option *ngFor=\"let student of students\" [value]=\"student.id\">\n                                    {{ student.first_name + ' ' + student.middle_name + ' ' + student.last_name }}\n                                </mat-option>\n                            \n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('student_assigned_to').hasError('required')\">\n                            Select student name\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                        <mat-label>Class</mat-label>\n                        <mat-select formControlName=\"class_assigned_to\" required>\n                           \n                                <mat-option  *ngFor=\"let class of classes\" [value]=\"class.id\">\n                                    {{class.name}}\n                                </mat-option>\n                            \n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('class_assigned_to').hasError('required')\">\n                            Select class\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div> -->\n            <div class=\"row\">\n                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Category Title</mat-label>\n                        <input matInput formControlName=\"category_title\" disabled>\n                        <mat-icon matSuffix>account_circle</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('category_title').hasError('required')\">\n                            Please enter Category Title\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Fees Name</mat-label>\n                        <input matInput formControlName=\"fees_name\" required>\n                        <mat-icon matSuffix>receipt</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('fees_name').hasError('required')\">\n                            Enter fees name\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Fees Amount</mat-label>\n                        <input matInput formControlName=\"fees_amount\" required>\n                        <mat-icon matSuffix>receipt</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('fees_amount').hasError('required')\">\n                            Enter fees amount\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                \n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                        <mat-label>Installment Allowed</mat-label>\n                        <mat-select formControlName=\"installment_allowed\" required>\n                            <mat-option [value]=\"'true'\">\n                                Yes\n                            </mat-option>\n                            <mat-option [value]=\"'false'\">\n                                No\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('installment_allowed').hasError('required')\">\n                            Installment Allowed Required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n        \n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!feesForm.valid\"\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FeesService } from '../../fees.service';\n\n@Component({\n  selector: 'app-form-dialog-delete',\n  templateUrl: './form-dialog-delete.component.html',\n  styleUrls: ['./form-dialog-delete.component.sass']\n})\nexport class FormDialogDeleteComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.feesService.deleteFees(this.data.id);\n  }\n\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Are you sure?</h3>\n    <div mat-dialog-content>\n        <ul class=\"clearfix\">\n            <li>\n                <p>\n                    <span class=\"font-weight-bold\">Category Title: </span>{{data.category_title}}\n                </p>\n            </li>\n            <li>\n                <p><span class=\"font-weight-bold\"> Fee name: </span>{{data.fees_name}}</p>\n            </li>\n            <li>\n                <p><span class=\"font-weight-bold\"> Fee amount: </span>{{ data.fees_amount }}</p>\n            </li>\n            <!-- <li>\n                <p>\n                    <span class=\"font-weight-bold\">Class Assigned to: </span>{{data.class_assigned_to.name}}\n                </p>\n            </li>\n            <li>\n                <p>\n                    <span class=\"font-weight-bold\">Student Assigned to: </span>{{data.student_assigned_to.last_name + ' ' + data.student_assigned_to.middle_name + ' ' + data.student_assigned_to.first_name}}\n                </p>\n\n            </li> -->\n        </ul>\n    </div>\n    <div mat-dialog-actions class=\"mb-1\">\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n            Delete\n        </button>\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject,OnInit } from '@angular/core';\nimport { FeesService, Classes, Student} from '../../fees.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder\n} from '@angular/forms';\nimport { FeeCategory } from '../../fees';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-form-dialog-edit',\n  templateUrl: './form-dialog-edit.component.html',\n  styleUrls: ['./form-dialog-edit.component.sass']\n})\nexport class FormDialogEditComponent implements OnInit {\n\n  action: string;\n  dialogTitle: string;\n  feesForm: FormGroup;\n  fees: FeeCategory;\n  classes: Classes[];\n  students: Student[];\n  displayAll = false;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogEditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.getClasses();\n    this.getStudents();\n    this.action = data.action;\n    if (this.action === 'edit') {\n      console.log(data.fees);\n      this.dialogTitle = 'Edit Category';\n      this.fees = data.fees;\n      this.displayAll=true;\n    } else {\n      this.dialogTitle = 'New Category';\n      this.fees = new FeeCategory();\n    }\n    this.feesForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.fees.id],\n      category_title: [this.fees.category_title, [Validators.required]],\n      // class_assign_to: [this.fees.class_assign_to, ],\n      // student_assign_to: [this.fees.student_assign_to, ],\n      // amount: [this.fees., [Validators.required]]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.feesService.addFees(this.feesForm.getRawValue());\n    if(this.action === 'edit') {\n      console.log(\"it's editing\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.editFeeCategory(\n        // this.feesForm.value,\n        this.fees.id,\n        this.fees.category_title,\n\n      ).subscribe((res) => {\n        \n        console.log(res);\n        this.getClasses();\n        this.getStudents();\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n\n    } else {\n      console.log(\"it's adding\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.createFeeCategory(\n        // this.feesForm.value,\n        this.fees.category_title,\n        // this.feesForm.value.category_title,\n        \n\n      ).subscribe((res) => {\n        \n        console.log(res);\n        this.getClasses();\n        this.getStudents();\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n\n    }\n  }\n\n  getClasses() {\n    \n    this.feesService.getCategoryClasses()\n     .subscribe(\n       (response) => {\n         this.classes = response;\n         console.log(response);\n         \n         console.log(\"get classes working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get classes not working\")\n\n       }\n     );\n\n  }\n\n  editClass(id, fees): void {\n    // this.aclass.available = !this.aclass.available;\n    \n    this.feesService.editClass(\n      id,\n      fees\n    ).subscribe((res) => {\n      // console.log(this.login.role);\n      console.log(res);\n      this.getClasses();\n      this.getStudents();\n      // console.log(res.data.id);\n      console.log(\"edit class working\");\n      this.getClasses();\n      // this.success = \"Your super admin account has been successfully created\"\n      \n    }, (error) => {\n      console.error(error);\n      console.log(\"edit class not working\");\n      \n    });\n\n  }\n\n  editStudent(id, student_id, fees): void {\n    // this.aclass.available = !this.aclass.available;\n    \n    this.feesService.editStudent(\n      id,\n      student_id,\n      fees\n    ).subscribe((res) => {\n      // console.log(this.login.role);\n      console.log(res);\n      this.getClasses();\n      this.getStudents();\n      // console.log(res.data.id);\n      console.log(\"edit class working\");\n      this.getClasses();\n      // this.success = \"Your super admin account has been successfully created\"\n      \n    }, (error) => {\n      console.error(error);\n      console.log(\"edit student not working\");\n      console.log(\"fees id\" + this.fees.id);\n      \n    });\n\n  }\n\n  getStudents() {\n    \n    this.feesService.getCategoryStudents()\n     .subscribe(\n       (response) => {\n         this.students = response;\n         console.log(response);\n         console.log(\"get students working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get students not working\")\n\n       }\n     );\n\n  }\n\n  createFeeCategory() {\n    console.log(\"it's creating fee category\");\n      this.feesService.updateFees(this.feesForm.getRawValue());\n      this.feesService.createFeeCategory(\n        // this.feesForm.value,\n        // this.feesForm.value.category_title,\n        this.fees.category_title\n        // this.feesForm.value.class_assign_to,\n        // this.feesForm.value.student_assign_to,\n        \n\n      ).subscribe((res) => {\n        \n        console.log(res);\n        this.fees.id = res.id;\n        this.displayAll = true;\n      \n        console.log(\"successfully logged in\");\n        \n        \n      }, (error) => {\n        console.error(error);\n        // this.error = error.error;\n      });\n\n  }\n\n  ngOnInit() {\n    // this.feesForm = this.createContactForm();\n  }\n\n  // editFeeCategoryName() {\n  //   console.log(\"it's creating fee category\");\n  //     this.feesService.updateFees(this.feesForm.getRawValue());\n  //     this.feesService.createFeeCategory(\n  //       // this.feesForm.value,\n  //       this.feesForm.value.category_title,\n  //       // this.feesForm.value.class_assign_to,\n  //       // this.feesForm.value.student_assign_to,\n        \n\n  //     ).subscribe((res) => {\n        \n  //       console.log(res);\n  //       this.fees.id = res.id;\n  //       this.displayAll = true;\n      \n  //       console.log(\"successfully logged in\");\n        \n        \n  //     }, (error) => {\n  //       console.error(error);\n  //       // this.error = error.error;\n  //     });\n\n  // }\n\n}\n","<div>\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 font-17\">\n                        {{dialogTitle}}</div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <!-- <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"submit\"> -->\n            <div class=\"row\">\n                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Category Title</mat-label>\n                        <input matInput [(ngModel)]=\"fees.category_title\" required>\n                        <mat-icon matSuffix>account_circle</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('category_title').hasError('required')\">\n                            Please enter Category Title\n                        </mat-error>\n                    </mat-form-field>\n                    <ng-template [ngIf]=\"!displayAll\">\n                        <button mat-raised-button color=\"primary\" (click)=\"createFeeCategory()\" aria-label=\"Close dialog\">\n                            Create Category\n                        </button>\n                    </ng-template>\n                    <ng-template [ngIf]=\"displayAll\">\n                        <button mat-raised-button color=\"primary\" (click)=\"confirmAdd()\" aria-label=\"Close dialog\">\n                            Edit Category\n                        </button>\n                    </ng-template>\n                </div>\n            </div>\n            \n            <ng-template [ngIf]=\"displayAll\">\n                <!-- <p>Display working</p> -->\n                <div class=\"row\">\n                    <p><strong>Select Students</strong></p>\n                    <ng-container *ngFor=\"let student of students\" >\n                        <section class=\"example-section\">\n                            <mat-checkbox class=\"example-margin\" (click)=\"editStudent(student.id, student.student_id.id, fees.id)\" [(ngModel)]=\"student.fee_category==fees.id\" >\n                                {{ student.student_id.first_name + ' ' + student.student_id.middle_name + ' ' + student.student_id.last_name }}\n                            </mat-checkbox>\n                        </section>\n                    </ng-container>          \n                </div>\n                <div class=\"row\">\n                    <p><strong>Select Classes</strong></p>\n                    <ng-container *ngFor=\"let class of classes\" >\n                        <section class=\"example-section\">\n                            <mat-checkbox class=\"example-margin\" (click)=\"editClass(class.id, fees.id)\" [(ngModel)]=\"class.fee_category==fees.id\" >{{class.name}}\n                            </mat-checkbox>\n                        </section>\n                    </ng-container>          \n                </div>\n            </ng-template>\n           \n                \n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!feesForm.valid\"\n                            [mat-dialog-close]=\"1\" (click)=\"onNoClick()\">Save</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        <!-- </form> -->\n    </div>\n</div>\n\n<!-- <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                        <mat-label>Student Name</mat-label>\n                        <mat-select formControlName=\"student_assign_to\" required>\n                           \n                                <mat-option *ngFor=\"let student of students\" [value]=\"student.id\">\n                                    {{ student.first_name + ' ' + student.middle_name + ' ' + student.last_name }}\n                                </mat-option>\n                            \n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('student_assign_to').hasError('required')\">\n                            Select student name\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div> -->","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport { PaymentMethod, SetUpFees} from '../setup/fees';\n\nexport class Classes{\n  constructor(\n      public id?: any,\n      public name?: string,\n      public available?: any,\n      public fee_category?: any\n    ) {}\n}\n\nexport class FeeCategory {\n  constructor(\n    public id?: any,\n    public category_title?: string,\n    // public class_assign_to?: any,\n    // public student_assign_to?: any,\n    public fee_name?: string,\n    public fees_amount?: any,\n    public installment_allowed?: any,\n    \n  ) {\n\n  }\n  \n}\n\nexport class Student {\n  constructor(\n      public id?: any,\n      public first_name?: string,\n      public middle_name?: string,\n      public last_name?: string,\n      public class_applied_for?: string,\n      public exam_score?: any,\n      public admit_applicant?: any\n  ) {\n\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeesService {\n  API_URL = environment.apiUrl;\n  DOMAIN_URL = environment.clientapiUrl;\n  PROTOCOL = \"http://\"\n  baseurl = this.API_URL;\n  domainurl = this.DOMAIN_URL;\n  protocol = this.PROTOCOL;\n  private readonly API_CLASS = 'assets/data/my-classes.json';\n  private readonly API_STUDENT = 'assets/data/my-students.json';\n\n  private readonly API_URLS = 'assets/data/fee-setup.json';\n  dataChange: BehaviorSubject<SetUpFees[]> = new BehaviorSubject<SetUpFees[]>([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {}\n  get data(): SetUpFees[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllFeess(): void {\n    this.httpClient.get<SetUpFees[]>(this.baseurl + '/fee/create/fee_category/').subscribe(\n      data => {\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n        console.log(error.name + ' ' + error.message);\n      }\n    );\n  }\n  // DEMO ONLY, you can find working methods below\n  addFees(fees: SetUpFees): void {\n    this.dialogData = fees;\n    // this.createSetUpFees(fees);\n  }\n  updateFees(fees: SetUpFees): void {\n    this.dialogData = fees;\n    // this.editSetUpFees(fees);\n  }\n  deleteFees(id: number): void {\n    console.log(id);\n    this.deleteSetUpFees(id);\n  }\n\n  createFeeCategory(\n    category_title: string,\n    \n  ): Observable<FeeCategory> {\n    const url = this.baseurl + '/fee/create/fee_category/';\n    const formData = new FormData();\n    formData.append('category_title', category_title);\n    return this.httpClient.request<FeeCategory>('POST', url, {body: formData});\n  }\n\n  editFeeCategory(\n    id: any,\n    category_title: string,\n  ): Observable<FeeCategory> {\n    const url = this.baseurl + '/fee/edit/fee_category/' + id + '/';\n    const formData = new FormData();\n    formData.append('category_title', category_title);\n    return this.httpClient.request<FeeCategory>('PUT', url, {body: formData});\n  }\n\n  deleteFeeCategory(\n    id: any\n  ): void {\n    console.log(\"deleted\");\n    this.httpClient.delete<FeeCategory>(this.baseurl + '/fee/edit/fee_category/' + id + '/').subscribe(\n      data => {\n        console.log(data);\n      },\n      (error: HttpErrorResponse) => {\n        console.log(error.name + ' ' + error.message);\n      }\n    );\n  }\n\n  createSetUpFees(\n    // fees: SetUpFees\n    fees_name: string,\n    fees_amount: string,\n    installment_allowed: any,\n    class_assigned_to: any,\n    student_assigned_to:any\n    \n  ): Observable<SetUpFees> {\n    const url = this.baseurl + '/fee/create/setup_fee/';\n    const formData = new FormData();\n    formData.append('fees_name', fees_name);\n    formData.append('fees_amount', fees_amount);\n    formData.append('installment_allowed', installment_allowed);\n    formData.append('class_assigned_to', class_assigned_to);\n    formData.append('student_assigned_to', student_assigned_to);\n    return this.httpClient.request<SetUpFees>('POST', url, {body: formData});\n  }\n  // assign_to_classes = models.ForeignKey(Classes, null=True, blank=True, related_name='class_setup_fee', on_delete=models.DO_NOTHING)\n  //   assign_to_students\n\n  editSetUpFees(\n    // fees: SetUpFees\n    id: any,\n    category_title: string,\n    fees_name: string,\n    fees_amount: string,\n    installment_allowed: any,\n    // fees_name: string,\n    // fees_amount: string,\n    // installment_allowed: any\n  ): Observable<SetUpFees> {\n    const url = this.baseurl + '/fee/edit/fee_category/' + id + '/';\n    const formData = new FormData();\n    formData.append('fees_name', fees_name);\n    formData.append('fees_amount', fees_amount);\n    formData.append('category_title', category_title);\n    formData.append('installment_allowed', installment_allowed);\n    // formData.append('class_assigned_to', class_assigned_to);\n    // formData.append('student_assigned_to', student_assigned_to);\n    return this.httpClient.request<SetUpFees>('PUT', url, {body: formData});\n  }\n\n  deleteSetUpFees(id: any): Observable<SetUpFees> {\n    const url = this.baseurl + '/fee/delete/setup_fee/' + id + '/';\n    return this.httpClient.request<SetUpFees>('DELETE', url);\n  }\n  createPaymentMethod(\n    secret_key: string,\n    public_key: string\n    \n  ): Observable<PaymentMethod> {\n    const url = this.baseurl + '/fee/create/payment_method/';\n    const formData = new FormData();\n    formData.append('secret_key', secret_key);\n    formData.append('public_key', public_key);\n    return this.httpClient.request<PaymentMethod>('POST', url, {body: formData});\n  }\n\n  editPaymentMethod(\n    id: any,\n    secret_key: string,\n    public_key: string\n  ): Observable<PaymentMethod> {\n    const url = this.baseurl + '/fee/edit/payment_method/' + id + '/';\n    const formData = new FormData();\n    formData.append('secret_key', secret_key);\n    formData.append('public_key', public_key);\n    return this.httpClient.request<PaymentMethod>('PUT', url, {body: formData});\n  }\n\n  getPaymentMethod(): Observable<PaymentMethod> {\n    const url = this.baseurl + '/fee/create/payment_method/';\n    return this.httpClient.request<PaymentMethod>('GET', url);\n  }\n\n  getClasses(): Observable<Classes[]> {\n    const url = this.baseurl + '/student/create/class/';\n    return this.httpClient.request<Classes[]>('GET', url);\n  }\n\n  editClass(\n    id: any,\n    fee_category\n  ): Observable<Classes> {\n    const url = this.baseurl + '/student/edit/class/' + id + '/';\n    const formData = new FormData();\n    formData.append('fee_category', fee_category);\n    return this.httpClient.request<Classes>('PUT', url, {body: formData});\n  }\n\n  getStudents(): Observable<Student[]> {\n    const url = this.baseurl + '/student/create/student_exam/';\n    return this.httpClient.request<Student[]>('GET', url);\n  }\n\n  editStudent(\n    id: any,\n    student_id,\n    fee_category\n  ): Observable<Classes> {\n    const url = this.baseurl + '/fee/edit/student_class_detail/' + id + '/';\n    const formData = new FormData();\n    formData.append('student_id', student_id);\n    formData.append('fee_category', fee_category);\n    return this.httpClient.request<Classes>('PUT', url, {body: formData});\n  }\n\n  getCategoryClasses(): Observable<Classes[]> {\n    const url = this.baseurl + '/student/create/class/';\n    return this.httpClient.request<Classes[]>('GET', url);\n  }\n\n  getCategoryStudents(): Observable<Student[]> {\n    const url = this.baseurl + '/fee/create/student_class_detail/?expand=student_id';\n    return this.httpClient.request<Student[]>('GET', url);\n  }\n\n}","export class PaymentMethod {\n    constructor(\n        public id?: any,\n        public secret_key?: string,\n        public public_key?: string\n    ) {}\n}\n\nexport class BankDetails{\n    constructor(\n        // public id?: any,\n        // public secret_key?: string,\n        // public public_key?: string\n    ) {}\n}\n\nexport class Classes{\n    constructor(\n        public id?: any,\n        public name?: string,\n        public available?: any\n      ) {}\n  }\n\nexport class SetUpFees{\n    constructor(\n        public id?: any,\n        public category_title?: string,\n        public fees_name?: string,\n        public fees_amount?: string,\n        public installment_allowed?: string,\n        // public class_assigned_to?: Classes,\n        // public student_assigned_to?: Student\n    ) {}\n}\n\n\n\nexport class FeesDiscount{\n    constructor(\n        public id?: any,\n        public fees_name?: string,\n        public fees_amount?: string,\n        public installment_allowed?: any,\n        public assign_to_classes?: any,\n        public assign_to_students?: any,\n    ) {}\n}\n\nexport class FeeCategory {\n    constructor(\n      public id?: any,\n      public category_title?: string,\n      // public class_assign_to?: any,\n      // public student_assign_to?: any,\n      public fee_name?: string,\n      public fees_amount?: any,\n      public installment_allowed?: any,\n      \n    ) {\n  \n    }\n    \n  }\n\nexport class FeeReport{\n    constructor(\n        public id?: any,\n        public student_name?: string,\n        public classes?: string,\n        public total_fees_assigned?: string,\n        public total_amount_paid?: any,\n        public balance_to_pay?: any,\n        public payment_due_date?: any,\n        public last_payment_date?: any,\n        public status?: any\n    ) {}\n}\n\nexport class Student {\n    constructor(\n        public id?: any,\n        public first_name?: string,\n        public middle_name?: string,\n        public last_name?: string,\n        public class_applied_for?: string,\n        public exam_score?: any,\n        public admit_applicant?: any\n    ) {\n  \n    }\n  }\n\n\n\n\n// class PaymentMethod(models.Model):\n//     secret_key = models.CharField(max_length=80)\n//     public_key = models.CharField(max_length=80)\n\n// class BankDetails(models.Model):\n//     pass\n\n// class SetUpFees(models.Model):\n//     fees_name = models.CharField(max_length=30)\n//     fees_amount = models.CharField(max_length=30)\n//     installment_allowed = models.BooleanField()\n//     # assign_to_classes = models.ManyToManyField()\n//     # assign_to_students = models.ManyToManyField(User)\n    \n// class FeesDiscount(models.Model):\n//     discount_name = models.CharField(max_length=50)\n//     discount_code = models.CharField(max_length=80)\n//     amount = models.IntegerField()\n//     description = models.TextField()\n//     # assign_students = models.ManyToManyField()\n\n// class FeeReport(models.Model):\n//     student_name = models.CharField(max_length=50)\n//     # classes = models.OneToOneField()\n//     total_fees_assigned = models.IntegerField()\n//     total_amount_paid = models.IntegerField()\n//     balance_to_pay = models.IntegerField()\n//     payment_due_date = models.DateField()\n//     last_payment_date = models.DateField()\n//     status = models.CharField(max_length=20)","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogAddComponent } from './dialogs/form-dialog-add/form-dialog-add.component';\nimport { FormDialogDeleteComponent } from './dialogs/form-dialog-delete/form-dialog-delete.component';\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FeesService, Classes } from '../setup/fees.service';\nimport { SetUpFees } from '../setup/fees';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n// import { FormDialogCategoryComponent } from './dialogs/form-dialog-category/form-dialog-category.component';\nimport { FormDialogEditComponent} from './dialogs/form-dialog-edit/form-dialog-edit.component';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.sass']\n})\nexport class SetupComponent implements OnInit {\n  displayedColumns = [\n    'select',\n    'category_title',\n    'fees_name',\n    'fees_amount',\n    'installment_allowed',\n    'actions'\n  ];\n  exampleDatabase: FeesService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<SetUpFees>(true, []);\n  classes: Classes[];\n  id: number;\n  fees: SetUpFees | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public feesService: FeesService,\n    private snackBar: MatSnackBar\n  ) { }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  getClasses() {\n    \n    this.feesService.getClasses()\n     .subscribe(\n       (response) => {\n         this.classes = response;\n         console.log(response);\n         console.log(\"get classes working\");\n        //  this.getParentProfile();\n\n       }, (error) => {\n         console.error(error);\n         console.log(\"get classes not working\")\n\n       }\n     );\n\n  }\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogEditComponent, {\n      data: {\n        fees: this.fees,\n        action: 'add'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.feesService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogAddComponent, {\n      data: {\n        fees: row,\n        action: 'edit'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          x => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.feesService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogDeleteComponent, {\n      data: row\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          x => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n        this.selection.select(row)\n      );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<SetUpFees>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new FeesService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup')\n      // .debounceTime(150)\n      // .distinctUntilChanged()\n      .subscribe(() => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: SetUpFees) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { item: item };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<SetUpFees> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this._filterChange.value;\n  }\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n  filteredData: SetUpFees[] = [];\n  renderedData: SetUpFees[] = [];\n  constructor(\n    public _exampleDatabase: FeesService,\n    public _paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<SetUpFees[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page\n    ];\n    this._exampleDatabase.getAllFeess();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this._exampleDatabase.data\n          .slice()\n          .filter((fees: SetUpFees) => {\n            const searchStr = (\n              fees.category_title +\n              fees.fees_amount +\n              fees.fees_name +\n              fees.installment_allowed\n              // fees.student_assigned_to +\n              // fees.class_assigned_to\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this._paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() { }\n  /** Returns a sorted copy of the database data. */\n  sortData(data: SetUpFees[]): SetUpFees[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'category_title':\n          [propertyA, propertyB] = [a.category_title, b.category_title];\n          break;\n        case 'fees_name':\n          [propertyA, propertyB] = [a.fees_name, b.fees_name];\n          break;\n        case 'fees_amount':\n          [propertyA, propertyB] = [a.fees_amount, b.fees_amount];\n          break;\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\n        case 'installment_allowed':\n          [propertyA, propertyB] = [a.installment_allowed, b.installment_allowed];\n          break;\n        // case 'student_assigned_to':\n        //   [propertyA, propertyB] = [a.student_assigned_to.last_name, b.student_assigned_to.last_name];\n        //   break;\n        // case 'class_assigned_to':\n        //   [propertyA, propertyB] = [a.class_assigned_to.name, b.class_assigned_to.name];\n        //   break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n\n \n}\n\n// import { Component, OnInit } from '@angular/core';\n// import { Router, ActivatedRoute } from '@angular/router';\n// import { FeesService } from '../setup/fees.service';\n// import { SetUpFees } from '../setup/fees';\n// import { FormBuilder, FormGroup } from '@angular/forms';\n// import { MatSnackBar } from '@angular/material/snack-bar';\n\n// @Component({\n//   selector: 'app-setup',\n//   templateUrl: './setup.component.html',\n//   styleUrls: ['./setup.component.sass']\n// })\n// export class SetupComponent implements OnInit {\n\n//    // domain: any;\n//   // loginForm: FormGroup;\n//   setup: SetUpFees = new SetUpFees();\n//   submitted = false;\n//   returnUrl: string;\n//   hide = true;\n//   success: any;\n//   error: any;\n//   constructor(\n//     private formBuilder: FormBuilder,\n//     private route: ActivatedRoute,\n//     private router: Router,\n//     private feesService: FeesService,\n//     private snackBar: MatSnackBar\n//   ) {\n//     // route.params.subscribe(params => { this.domain = params['id']; });\n//   }\n//   ngOnInit() {\n//     this.getSetUp();\n  \n//   }\n  \n//   showNotification(colorName, text, placementFrom, placementAlign) {\n//     this.snackBar.open(text, '', {\n//       duration: 2000,\n//       verticalPosition: placementFrom,\n//       horizontalPosition: placementAlign,\n//       panelClass: colorName,\n//     });\n//   }\n\n//   editSetUp(): void {\n//     this.feesService.editSetUpFees(\n//       this.setup.id,\n//       this.setup.fees_name,\n//       this.setup.fees_amount,\n//       this.setup.installment_allowed\n//     ).subscribe((res) => {\n//       // console.log(this.login.role);\n//       console.log(res);\n//       // console.log(res.data.id);\n//       console.log(\"successfully logged in\");\n//       this.showNotification(\n//         'snackbar-success',\n//         'Set Up successfully updated...!!!',\n//         'bottom',\n//         'center'\n//       );\n//       this.getSetUp();\n//       this.success = res;\n//       // this.success = \"Your super admin account has been successfully created\"\n      \n//     }, (error) => {\n//       console.error(error);\n      \n//     });\n\n//   }\n\n//   getSetUp() {\n    \n//     this.feesService.getSetUpFees()\n//      .subscribe(\n//        (response) => {\n//          this.setup = response[0];\n//          console.log(response[0]);\n//         //  this.getParentProfile();\n\n//        }, (error) => {\n//          console.error(error);\n//        }\n//      );\n\n//   }\n\n// }\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <ul class=\"breadcrumb breadcrumb-style \">\n                        <li class=\"breadcrumb-item\">\n                            <h4 class=\"page-title\">Fees Setup</h4>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-1\">\n                            <a routerLink=\"/dashboard/main\">\n                                <i class=\"fas fa-home\"></i> Home</a>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-2\">\n                            <a href=\"#\" onClick=\"return false;\">Setup</a>\n                        </li>\n                        <li class=\"breadcrumb-item active\">All</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"responsive_table\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ml-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>\n                                                    <strong>Feess</strong></h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Search\" type=\"text\" #filter\n                                                    class=\"browser-default search-field\" aria-label=\"Search box\">\n                                            </li>\n                                            <li>\n                                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                                                        <mat-icon class=\"col-white\">delete\n                                                        </mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"icon-button-demo\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"icon-button-demo\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                                <!-- Checkbox Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n                                <!-- ID Column -->\n                                <!-- <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                                </ng-container> -->\n                                <!-- <ng-container matColumnDef=\"student_assigned_to\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Student Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.student_assigned_to.last_name + ' ' + row.student_assigned_to.first_name}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"class_assigned_to\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Class Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.class_assigned_to.name}}</mat-cell>\n                                </ng-container> -->\n                                <ng-container matColumnDef=\"category_title\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Category Title</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\">{{row.category_title}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"fees_name\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Fee Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.fees_name }}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"fees_amount\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Fee Amount</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.fees_amount }}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"installment_allowed\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>installment Allowed</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.installment_allowed }}</mat-cell>\n                                </ng-container>\n                                <!-- actions -->\n                                <ng-container matColumnDef=\"actions\">\n                                    <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\">\n                                            <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                        </button>\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\">\n                                            <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                            </mat-table>\n                            <!-- context menu start -->\n                            <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                            </div>\n                            <mat-menu #contextMenu=\"matMenu\">\n                                <ng-template matMenuContent let-item=\"item\">\n                                    <button mat-menu-item (click)=\"addNew()\">\n                                        <mat-icon>add_box</mat-icon>\n                                        <span>Add Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"editCall(item)\">\n                                        <mat-icon>create</mat-icon>\n                                        <span>Edit Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"deleteItem(item)\">\n                                        <mat-icon>delete</mat-icon>\n                                        <span>Delete Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"refresh()\">\n                                        <mat-icon>refresh</mat-icon>\n                                        <span>Refresh Record</span>\n                                    </button>\n                                    <button mat-menu-item disabled>\n                                        <mat-icon>no_encryption</mat-icon>\n                                        <span>Disable</span>\n                                    </button>\n                                    <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                                        <mat-icon>list_alt</mat-icon>\n                                        <span> Nested Menu</span>\n                                    </button>\n                                </ng-template>\n                            </mat-menu>\n                            <mat-menu #nestedmenu=\"matMenu\">\n                                <button mat-menu-item>\n                                    <mat-icon>mail_outline</mat-icon>\n                                    <span>Item 1</span>\n                                </button>\n                                <button mat-menu-item>\n                                    <mat-icon>call</mat-icon>\n                                    <span>Item 2</span>\n                                </button>\n                                <button mat-menu-item>\n                                    <mat-icon>chat</mat-icon>\n                                    <span>Item 3</span>\n                                </button>\n                            </mat-menu>\n                            <!-- context menu end -->\n                            <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                                No results\n                            </div>\n                            <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                                [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n"],"sourceRoot":"webpack:///"}